apiVersion: rolepermission.auth0.jwefers.upbound.io/v1alpha1
kind: Permission
metadata:
  annotations:
    meta.upbound.io/example-id: rolepermission/v1alpha1/permission
  labels:
    testing.upbound.io/example-name: my_role_perm
  name: my-role-perm
spec:
  forProvider:
    for_each: ${toset(local.scopesList)}
    permission: ${each.value}
    resourceServerIdentifier: https://api.example.com
    roleId: ${auth0_role.my_role.id}

---

apiVersion: resourceserver.auth0.jwefers.upbound.io/v1alpha1
kind: Server
metadata:
  annotations:
    meta.upbound.io/example-id: rolepermission/v1alpha1/permission
  labels:
    testing.upbound.io/example-name: resource_server
  name: resource-server
spec:
  forProvider:
    identifier: test.example.com
    name: test

---

apiVersion: resourceserverscopes.auth0.jwefers.upbound.io/v1alpha1
kind: ServerScopes
metadata:
  annotations:
    meta.upbound.io/example-id: rolepermission/v1alpha1/permission
  labels:
    testing.upbound.io/example-name: resource_server_scopes
  name: resource-server-scopes
spec:
  forProvider:
    resourceServerIdentifier: test.example.com
    scopes:
    - name: store:create
    - name: store:read
    - name: store:update
    - name: store:delete

---

apiVersion: role.auth0.jwefers.upbound.io/v1alpha1
kind: Role
metadata:
  annotations:
    meta.upbound.io/example-id: rolepermission/v1alpha1/permission
  labels:
    testing.upbound.io/example-name: my_role
  name: my-role
spec:
  forProvider:
    name: My Role
