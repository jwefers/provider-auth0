// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CredentialsInitParameters struct {

	// (String, Sensitive) API Key for your email service. Will always be encrypted in our database.
	// API Key for your email service. Will always be encrypted in our database.
	APIKeySecretRef *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty" tf:"-"`

	// (String, Sensitive) AWS Access Key ID. Used only for AWS.
	// AWS Access Key ID. Used only for AWS.
	AccessKeyIDSecretRef *v1.SecretKeySelector `json:"accessKeyIdSecretRef,omitempty" tf:"-"`

	// (String, Sensitive) Azure Communication Services Connection String.
	// Azure Communication Services Connection String.
	AzureCsConnectionStringSecretRef *v1.SecretKeySelector `json:"azureCsConnectionStringSecretRef,omitempty" tf:"-"`

	// (String) Domain name.
	// Domain name.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String, Sensitive) Microsoft 365 Client ID.
	// Microsoft 365 Client ID.
	Ms365ClientIDSecretRef *v1.SecretKeySelector `json:"ms365ClientIdSecretRef,omitempty" tf:"-"`

	// (String, Sensitive) Microsoft 365 Client Secret.
	// Microsoft 365 Client Secret.
	Ms365ClientSecretSecretRef *v1.SecretKeySelector `json:"ms365ClientSecretSecretRef,omitempty" tf:"-"`

	// (String, Sensitive) Microsoft 365 Tenant ID.
	// Microsoft 365 Tenant ID.
	Ms365TenantIDSecretRef *v1.SecretKeySelector `json:"ms365TenantIdSecretRef,omitempty" tf:"-"`

	// (String) Default region. Used only for AWS, Mailgun, and SparkPost.
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String) Hostname or IP address of your SMTP server. Used only for SMTP.
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	SMTPHost *string `json:"smtpHost,omitempty" tf:"smtp_host,omitempty"`

	// (String, Sensitive) SMTP password. Used only for SMTP.
	// SMTP password. Used only for SMTP.
	SMTPPassSecretRef *v1.SecretKeySelector `json:"smtpPassSecretRef,omitempty" tf:"-"`

	// (Number) Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SMTPPort *float64 `json:"smtpPort,omitempty" tf:"smtp_port,omitempty"`

	// (String) SMTP username. Used only for SMTP.
	// SMTP username. Used only for SMTP.
	SMTPUser *string `json:"smtpUser,omitempty" tf:"smtp_user,omitempty"`

	// (String, Sensitive) AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKeySecretRef *v1.SecretKeySelector `json:"secretAccessKeySecretRef,omitempty" tf:"-"`
}

type CredentialsObservation struct {

	// (String) Domain name.
	// Domain name.
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) Default region. Used only for AWS, Mailgun, and SparkPost.
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String) Hostname or IP address of your SMTP server. Used only for SMTP.
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	SMTPHost *string `json:"smtpHost,omitempty" tf:"smtp_host,omitempty"`

	// (Number) Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SMTPPort *float64 `json:"smtpPort,omitempty" tf:"smtp_port,omitempty"`

	// (String) SMTP username. Used only for SMTP.
	// SMTP username. Used only for SMTP.
	SMTPUser *string `json:"smtpUser,omitempty" tf:"smtp_user,omitempty"`
}

type CredentialsParameters struct {

	// (String, Sensitive) API Key for your email service. Will always be encrypted in our database.
	// API Key for your email service. Will always be encrypted in our database.
	// +kubebuilder:validation:Optional
	APIKeySecretRef *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty" tf:"-"`

	// (String, Sensitive) AWS Access Key ID. Used only for AWS.
	// AWS Access Key ID. Used only for AWS.
	// +kubebuilder:validation:Optional
	AccessKeyIDSecretRef *v1.SecretKeySelector `json:"accessKeyIdSecretRef,omitempty" tf:"-"`

	// (String, Sensitive) Azure Communication Services Connection String.
	// Azure Communication Services Connection String.
	// +kubebuilder:validation:Optional
	AzureCsConnectionStringSecretRef *v1.SecretKeySelector `json:"azureCsConnectionStringSecretRef,omitempty" tf:"-"`

	// (String) Domain name.
	// Domain name.
	// +kubebuilder:validation:Optional
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String, Sensitive) Microsoft 365 Client ID.
	// Microsoft 365 Client ID.
	// +kubebuilder:validation:Optional
	Ms365ClientIDSecretRef *v1.SecretKeySelector `json:"ms365ClientIdSecretRef,omitempty" tf:"-"`

	// (String, Sensitive) Microsoft 365 Client Secret.
	// Microsoft 365 Client Secret.
	// +kubebuilder:validation:Optional
	Ms365ClientSecretSecretRef *v1.SecretKeySelector `json:"ms365ClientSecretSecretRef,omitempty" tf:"-"`

	// (String, Sensitive) Microsoft 365 Tenant ID.
	// Microsoft 365 Tenant ID.
	// +kubebuilder:validation:Optional
	Ms365TenantIDSecretRef *v1.SecretKeySelector `json:"ms365TenantIdSecretRef,omitempty" tf:"-"`

	// (String) Default region. Used only for AWS, Mailgun, and SparkPost.
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// (String) Hostname or IP address of your SMTP server. Used only for SMTP.
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	// +kubebuilder:validation:Optional
	SMTPHost *string `json:"smtpHost,omitempty" tf:"smtp_host,omitempty"`

	// (String, Sensitive) SMTP password. Used only for SMTP.
	// SMTP password. Used only for SMTP.
	// +kubebuilder:validation:Optional
	SMTPPassSecretRef *v1.SecretKeySelector `json:"smtpPassSecretRef,omitempty" tf:"-"`

	// (Number) Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	// +kubebuilder:validation:Optional
	SMTPPort *float64 `json:"smtpPort,omitempty" tf:"smtp_port,omitempty"`

	// (String) SMTP username. Used only for SMTP.
	// SMTP username. Used only for SMTP.
	// +kubebuilder:validation:Optional
	SMTPUser *string `json:"smtpUser,omitempty" tf:"smtp_user,omitempty"`

	// (String, Sensitive) AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	// +kubebuilder:validation:Optional
	SecretAccessKeySecretRef *v1.SecretKeySelector `json:"secretAccessKeySecretRef,omitempty" tf:"-"`
}

type HeadersInitParameters struct {

	// (String) Disable or enable the default View Content Link for sensitive emails.
	// Disable or enable the default View Content Link for sensitive emails.
	XMcViewContentLink *string `json:"xMcViewContentLink,omitempty" tf:"x_mc_view_content_link,omitempty"`

	// (String) SES Configuration set to include when sending emails.
	// SES Configuration set to include when sending emails.
	XSesConfigurationSet *string `json:"xSesConfigurationSet,omitempty" tf:"x_ses_configuration_set,omitempty"`
}

type HeadersObservation struct {

	// (String) Disable or enable the default View Content Link for sensitive emails.
	// Disable or enable the default View Content Link for sensitive emails.
	XMcViewContentLink *string `json:"xMcViewContentLink,omitempty" tf:"x_mc_view_content_link,omitempty"`

	// (String) SES Configuration set to include when sending emails.
	// SES Configuration set to include when sending emails.
	XSesConfigurationSet *string `json:"xSesConfigurationSet,omitempty" tf:"x_ses_configuration_set,omitempty"`
}

type HeadersParameters struct {

	// (String) Disable or enable the default View Content Link for sensitive emails.
	// Disable or enable the default View Content Link for sensitive emails.
	// +kubebuilder:validation:Optional
	XMcViewContentLink *string `json:"xMcViewContentLink,omitempty" tf:"x_mc_view_content_link,omitempty"`

	// (String) SES Configuration set to include when sending emails.
	// SES Configuration set to include when sending emails.
	// +kubebuilder:validation:Optional
	XSesConfigurationSet *string `json:"xSesConfigurationSet,omitempty" tf:"x_ses_configuration_set,omitempty"`
}

type MessageInitParameters struct {

	// (String) Setting for the ses email provider. The name of the configuration set to apply to the sent emails.
	// Setting for the `ses` email provider. The name of the configuration set to apply to the sent emails.
	ConfigurationSetName *string `json:"configurationSetName,omitempty" tf:"configuration_set_name,omitempty"`

	// (Boolean) Setting for the mandrill email provider. Set to true to see the content of individual emails sent to users.
	// Setting for the `mandrill` email provider. Set to `true` to see the content of individual emails sent to users.
	ViewContentLink *bool `json:"viewContentLink,omitempty" tf:"view_content_link,omitempty"`
}

type MessageObservation struct {

	// (String) Setting for the ses email provider. The name of the configuration set to apply to the sent emails.
	// Setting for the `ses` email provider. The name of the configuration set to apply to the sent emails.
	ConfigurationSetName *string `json:"configurationSetName,omitempty" tf:"configuration_set_name,omitempty"`

	// (Boolean) Setting for the mandrill email provider. Set to true to see the content of individual emails sent to users.
	// Setting for the `mandrill` email provider. Set to `true` to see the content of individual emails sent to users.
	ViewContentLink *bool `json:"viewContentLink,omitempty" tf:"view_content_link,omitempty"`
}

type MessageParameters struct {

	// (String) Setting for the ses email provider. The name of the configuration set to apply to the sent emails.
	// Setting for the `ses` email provider. The name of the configuration set to apply to the sent emails.
	// +kubebuilder:validation:Optional
	ConfigurationSetName *string `json:"configurationSetName,omitempty" tf:"configuration_set_name,omitempty"`

	// (Boolean) Setting for the mandrill email provider. Set to true to see the content of individual emails sent to users.
	// Setting for the `mandrill` email provider. Set to `true` to see the content of individual emails sent to users.
	// +kubebuilder:validation:Optional
	ViewContentLink *bool `json:"viewContentLink,omitempty" tf:"view_content_link,omitempty"`
}

type ProviderInitParameters struct {

	// (Block List, Min: 1, Max: 1) Configuration settings for the credentials for the email provider. (see below for nested schema)
	// Configuration settings for the credentials for the email provider.
	Credentials []CredentialsInitParameters `json:"credentials,omitempty" tf:"credentials,omitempty"`

	// (String) Email address to use as the sender when no other "from" address is specified.
	// Email address to use as the sender when no other "from" address is specified.
	DefaultFromAddress *string `json:"defaultFromAddress,omitempty" tf:"default_from_address,omitempty"`

	// (Boolean) Indicates whether the email provider is enabled.
	// Indicates whether the email provider is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Name of the email provider. Options include azure_cs, custom, mailgun, mandrill, ms365, sendgrid, ses, smtp and sparkpost.
	// Name of the email provider. Options include `azure_cs`, `custom`, `mailgun`, `mandrill`, `ms365`, `sendgrid`, `ses`, `smtp` and `sparkpost`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Max: 1) Specific email provider settings. (see below for nested schema)
	// Specific email provider settings.
	Settings []SettingsInitParameters `json:"settings,omitempty" tf:"settings,omitempty"`
}

type ProviderObservation struct {

	// (Block List, Min: 1, Max: 1) Configuration settings for the credentials for the email provider. (see below for nested schema)
	// Configuration settings for the credentials for the email provider.
	Credentials []CredentialsObservation `json:"credentials,omitempty" tf:"credentials,omitempty"`

	// (String) Email address to use as the sender when no other "from" address is specified.
	// Email address to use as the sender when no other "from" address is specified.
	DefaultFromAddress *string `json:"defaultFromAddress,omitempty" tf:"default_from_address,omitempty"`

	// (Boolean) Indicates whether the email provider is enabled.
	// Indicates whether the email provider is enabled.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the email provider. Options include azure_cs, custom, mailgun, mandrill, ms365, sendgrid, ses, smtp and sparkpost.
	// Name of the email provider. Options include `azure_cs`, `custom`, `mailgun`, `mandrill`, `ms365`, `sendgrid`, `ses`, `smtp` and `sparkpost`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Max: 1) Specific email provider settings. (see below for nested schema)
	// Specific email provider settings.
	Settings []SettingsObservation `json:"settings,omitempty" tf:"settings,omitempty"`
}

type ProviderParameters struct {

	// (Block List, Min: 1, Max: 1) Configuration settings for the credentials for the email provider. (see below for nested schema)
	// Configuration settings for the credentials for the email provider.
	// +kubebuilder:validation:Optional
	Credentials []CredentialsParameters `json:"credentials,omitempty" tf:"credentials,omitempty"`

	// (String) Email address to use as the sender when no other "from" address is specified.
	// Email address to use as the sender when no other "from" address is specified.
	// +kubebuilder:validation:Optional
	DefaultFromAddress *string `json:"defaultFromAddress,omitempty" tf:"default_from_address,omitempty"`

	// (Boolean) Indicates whether the email provider is enabled.
	// Indicates whether the email provider is enabled.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) Name of the email provider. Options include azure_cs, custom, mailgun, mandrill, ms365, sendgrid, ses, smtp and sparkpost.
	// Name of the email provider. Options include `azure_cs`, `custom`, `mailgun`, `mandrill`, `ms365`, `sendgrid`, `ses`, `smtp` and `sparkpost`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Block List, Max: 1) Specific email provider settings. (see below for nested schema)
	// Specific email provider settings.
	// +kubebuilder:validation:Optional
	Settings []SettingsParameters `json:"settings,omitempty" tf:"settings,omitempty"`
}

type SettingsInitParameters struct {

	// (Block List, Max: 1) Headers settings for the smtp email provider. (see below for nested schema)
	// Headers settings for the `smtp` email provider.
	Headers []HeadersInitParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// (Block List, Max: 1) Message settings for the mandrill or ses email provider. (see below for nested schema)
	// Message settings for the `mandrill` or `ses` email provider.
	Message []MessageInitParameters `json:"message,omitempty" tf:"message,omitempty"`
}

type SettingsObservation struct {

	// (Block List, Max: 1) Headers settings for the smtp email provider. (see below for nested schema)
	// Headers settings for the `smtp` email provider.
	Headers []HeadersObservation `json:"headers,omitempty" tf:"headers,omitempty"`

	// (Block List, Max: 1) Message settings for the mandrill or ses email provider. (see below for nested schema)
	// Message settings for the `mandrill` or `ses` email provider.
	Message []MessageObservation `json:"message,omitempty" tf:"message,omitempty"`
}

type SettingsParameters struct {

	// (Block List, Max: 1) Headers settings for the smtp email provider. (see below for nested schema)
	// Headers settings for the `smtp` email provider.
	// +kubebuilder:validation:Optional
	Headers []HeadersParameters `json:"headers,omitempty" tf:"headers,omitempty"`

	// (Block List, Max: 1) Message settings for the mandrill or ses email provider. (see below for nested schema)
	// Message settings for the `mandrill` or `ses` email provider.
	// +kubebuilder:validation:Optional
	Message []MessageParameters `json:"message,omitempty" tf:"message,omitempty"`
}

// ProviderSpec defines the desired state of Provider
type ProviderSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProviderParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ProviderInitParameters `json:"initProvider,omitempty"`
}

// ProviderStatus defines the observed state of Provider.
type ProviderStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProviderObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Provider is the Schema for the Providers API. With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email providers, so you can route all emails that are part of Auth0's authentication workflows through the supported high-volume email service of your choice.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,auth0}
type Provider struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.credentials) || (has(self.initProvider) && has(self.initProvider.credentials))",message="spec.forProvider.credentials is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultFromAddress) || (has(self.initProvider) && has(self.initProvider.defaultFromAddress))",message="spec.forProvider.defaultFromAddress is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ProviderSpec   `json:"spec"`
	Status ProviderStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProviderList contains a list of Providers
type ProviderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Provider `json:"items"`
}

// Repository type metadata.
var (
	Provider_Kind             = "Provider"
	Provider_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Provider_Kind}.String()
	Provider_KindAPIVersion   = Provider_Kind + "." + CRDGroupVersion.String()
	Provider_GroupVersionKind = CRDGroupVersion.WithKind(Provider_Kind)
)

func init() {
	SchemeBuilder.Register(&Provider{}, &ProviderList{})
}
