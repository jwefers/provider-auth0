// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BodyTextInitParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Body text bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Body text size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type BodyTextObservation struct {

	// (Boolean) Body text bold. Defaults to false.
	// Body text bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Body text size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type BodyTextParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Body text bold. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Body text size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type BordersInitParameters struct {

	// (Number) Button border radius. Value needs to be between 1 and 10. Defaults to 3.0.
	// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
	ButtonBorderRadius *float64 `json:"buttonBorderRadius,omitempty" tf:"button_border_radius,omitempty"`

	// (Number) Button border weight. Value needs to be between 0 and 10. Defaults to 1.0.
	// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
	ButtonBorderWeight *float64 `json:"buttonBorderWeight,omitempty" tf:"button_border_weight,omitempty"`

	// (String) Buttons style. Available options: pill, rounded, sharp. Defaults to rounded.
	// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	ButtonsStyle *string `json:"buttonsStyle,omitempty" tf:"buttons_style,omitempty"`

	// (Number) Input border radius. Value needs to be between 0 and 10. Defaults to 3.0.
	// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
	InputBorderRadius *float64 `json:"inputBorderRadius,omitempty" tf:"input_border_radius,omitempty"`

	// (Number) Input border weight. Value needs to be between 0 and 3. Defaults to 1.0.
	// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
	InputBorderWeight *float64 `json:"inputBorderWeight,omitempty" tf:"input_border_weight,omitempty"`

	// (String) Inputs style. Available options: pill, rounded, sharp. Defaults to rounded.
	// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	InputsStyle *string `json:"inputsStyle,omitempty" tf:"inputs_style,omitempty"`

	// (Boolean) Show widget shadow. Defaults to true.
	// Show widget shadow. Defaults to `true`.
	ShowWidgetShadow *bool `json:"showWidgetShadow,omitempty" tf:"show_widget_shadow,omitempty"`

	// (Number) Widget border weight. Value needs to be between 0 and 10. Defaults to 0.0.
	// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
	WidgetBorderWeight *float64 `json:"widgetBorderWeight,omitempty" tf:"widget_border_weight,omitempty"`

	// (Number) Widget corner radius. Value needs to be between 0 and 50. Defaults to 5.0.
	// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
	WidgetCornerRadius *float64 `json:"widgetCornerRadius,omitempty" tf:"widget_corner_radius,omitempty"`
}

type BordersObservation struct {

	// (Number) Button border radius. Value needs to be between 1 and 10. Defaults to 3.0.
	// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
	ButtonBorderRadius *float64 `json:"buttonBorderRadius,omitempty" tf:"button_border_radius,omitempty"`

	// (Number) Button border weight. Value needs to be between 0 and 10. Defaults to 1.0.
	// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
	ButtonBorderWeight *float64 `json:"buttonBorderWeight,omitempty" tf:"button_border_weight,omitempty"`

	// (String) Buttons style. Available options: pill, rounded, sharp. Defaults to rounded.
	// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	ButtonsStyle *string `json:"buttonsStyle,omitempty" tf:"buttons_style,omitempty"`

	// (Number) Input border radius. Value needs to be between 0 and 10. Defaults to 3.0.
	// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
	InputBorderRadius *float64 `json:"inputBorderRadius,omitempty" tf:"input_border_radius,omitempty"`

	// (Number) Input border weight. Value needs to be between 0 and 3. Defaults to 1.0.
	// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
	InputBorderWeight *float64 `json:"inputBorderWeight,omitempty" tf:"input_border_weight,omitempty"`

	// (String) Inputs style. Available options: pill, rounded, sharp. Defaults to rounded.
	// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	InputsStyle *string `json:"inputsStyle,omitempty" tf:"inputs_style,omitempty"`

	// (Boolean) Show widget shadow. Defaults to true.
	// Show widget shadow. Defaults to `true`.
	ShowWidgetShadow *bool `json:"showWidgetShadow,omitempty" tf:"show_widget_shadow,omitempty"`

	// (Number) Widget border weight. Value needs to be between 0 and 10. Defaults to 0.0.
	// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
	WidgetBorderWeight *float64 `json:"widgetBorderWeight,omitempty" tf:"widget_border_weight,omitempty"`

	// (Number) Widget corner radius. Value needs to be between 0 and 50. Defaults to 5.0.
	// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
	WidgetCornerRadius *float64 `json:"widgetCornerRadius,omitempty" tf:"widget_corner_radius,omitempty"`
}

type BordersParameters struct {

	// (Number) Button border radius. Value needs to be between 1 and 10. Defaults to 3.0.
	// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
	// +kubebuilder:validation:Optional
	ButtonBorderRadius *float64 `json:"buttonBorderRadius,omitempty" tf:"button_border_radius,omitempty"`

	// (Number) Button border weight. Value needs to be between 0 and 10. Defaults to 1.0.
	// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
	// +kubebuilder:validation:Optional
	ButtonBorderWeight *float64 `json:"buttonBorderWeight,omitempty" tf:"button_border_weight,omitempty"`

	// (String) Buttons style. Available options: pill, rounded, sharp. Defaults to rounded.
	// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	// +kubebuilder:validation:Optional
	ButtonsStyle *string `json:"buttonsStyle,omitempty" tf:"buttons_style,omitempty"`

	// (Number) Input border radius. Value needs to be between 0 and 10. Defaults to 3.0.
	// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
	// +kubebuilder:validation:Optional
	InputBorderRadius *float64 `json:"inputBorderRadius,omitempty" tf:"input_border_radius,omitempty"`

	// (Number) Input border weight. Value needs to be between 0 and 3. Defaults to 1.0.
	// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
	// +kubebuilder:validation:Optional
	InputBorderWeight *float64 `json:"inputBorderWeight,omitempty" tf:"input_border_weight,omitempty"`

	// (String) Inputs style. Available options: pill, rounded, sharp. Defaults to rounded.
	// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	// +kubebuilder:validation:Optional
	InputsStyle *string `json:"inputsStyle,omitempty" tf:"inputs_style,omitempty"`

	// (Boolean) Show widget shadow. Defaults to true.
	// Show widget shadow. Defaults to `true`.
	// +kubebuilder:validation:Optional
	ShowWidgetShadow *bool `json:"showWidgetShadow,omitempty" tf:"show_widget_shadow,omitempty"`

	// (Number) Widget border weight. Value needs to be between 0 and 10. Defaults to 0.0.
	// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
	// +kubebuilder:validation:Optional
	WidgetBorderWeight *float64 `json:"widgetBorderWeight,omitempty" tf:"widget_border_weight,omitempty"`

	// (Number) Widget corner radius. Value needs to be between 0 and 50. Defaults to 5.0.
	// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
	// +kubebuilder:validation:Optional
	WidgetCornerRadius *float64 `json:"widgetCornerRadius,omitempty" tf:"widget_corner_radius,omitempty"`
}

type ButtonsTextInitParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Buttons text bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Buttons text size. Value needs to be between `0` and `150`. Defaults to `100.0`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type ButtonsTextObservation struct {

	// (Boolean) Body text bold. Defaults to false.
	// Buttons text bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Buttons text size. Value needs to be between `0` and `150`. Defaults to `100.0`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type ButtonsTextParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Buttons text bold. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Buttons text size. Value needs to be between `0` and `150`. Defaults to `100.0`.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type ColorsInitParameters struct {

	// (String) Base focus color. Defaults to #635dff.
	// Base focus color. Defaults to `#635dff`.
	BaseFocusColor *string `json:"baseFocusColor,omitempty" tf:"base_focus_color,omitempty"`

	// (String) Base hover color. Defaults to #000000.
	// Base hover color. Defaults to `#000000`.
	BaseHoverColor *string `json:"baseHoverColor,omitempty" tf:"base_hover_color,omitempty"`

	// (String) Body text. Defaults to #1e212a.
	// Body text. Defaults to `#1e212a`.
	BodyText *string `json:"bodyText,omitempty" tf:"body_text,omitempty"`

	// (String) Captcha Widget Theme.
	// Captcha Widget Theme.
	CaptchaWidgetTheme *string `json:"captchaWidgetTheme,omitempty" tf:"captcha_widget_theme,omitempty"`

	// (String) Error. Defaults to #d03c38.
	// Error. Defaults to `#d03c38`.
	Error *string `json:"error,omitempty" tf:"error,omitempty"`

	// (String) Header. Defaults to #1e212a.
	// Header. Defaults to `#1e212a`.
	Header *string `json:"header,omitempty" tf:"header,omitempty"`

	// (String) Icons. Defaults to #65676e.
	// Icons. Defaults to `#65676e`.
	Icons *string `json:"icons,omitempty" tf:"icons,omitempty"`

	// (String) Input background. Defaults to #ffffff.
	// Input background. Defaults to `#ffffff`.
	InputBackground *string `json:"inputBackground,omitempty" tf:"input_background,omitempty"`

	// (String) Input border. Defaults to #c9cace.
	// Input border. Defaults to `#c9cace`.
	InputBorder *string `json:"inputBorder,omitempty" tf:"input_border,omitempty"`

	// (String) Input filled text. Defaults to #000000.
	// Input filled text. Defaults to `#000000`.
	InputFilledText *string `json:"inputFilledText,omitempty" tf:"input_filled_text,omitempty"`

	// (String) Input labels & placeholders. Defaults to #65676e.
	// Input labels & placeholders. Defaults to `#65676e`.
	InputLabelsPlaceholders *string `json:"inputLabelsPlaceholders,omitempty" tf:"input_labels_placeholders,omitempty"`

	// (String) Links & focused components. Defaults to #635dff.
	// Links & focused components. Defaults to `#635dff`.
	LinksFocusedComponents *string `json:"linksFocusedComponents,omitempty" tf:"links_focused_components,omitempty"`

	// (String) Primary button. Defaults to #635dff.
	// Primary button. Defaults to `#635dff`.
	PrimaryButton *string `json:"primaryButton,omitempty" tf:"primary_button,omitempty"`

	// (String) Primary button label. Defaults to #ffffff.
	// Primary button label. Defaults to `#ffffff`.
	PrimaryButtonLabel *string `json:"primaryButtonLabel,omitempty" tf:"primary_button_label,omitempty"`

	// (String) Secondary button border. Defaults to #c9cace.
	// Secondary button border. Defaults to `#c9cace`.
	SecondaryButtonBorder *string `json:"secondaryButtonBorder,omitempty" tf:"secondary_button_border,omitempty"`

	// (String) Secondary button label. Defaults to #1e212a.
	// Secondary button label. Defaults to `#1e212a`.
	SecondaryButtonLabel *string `json:"secondaryButtonLabel,omitempty" tf:"secondary_button_label,omitempty"`

	// (String) Success. Defaults to #13a688.
	// Success. Defaults to `#13a688`.
	Success *string `json:"success,omitempty" tf:"success,omitempty"`

	// (String) Widget background. Defaults to #ffffff.
	// Widget background. Defaults to `#ffffff`.
	WidgetBackground *string `json:"widgetBackground,omitempty" tf:"widget_background,omitempty"`

	// (String) Widget border. Defaults to #c9cace.
	// Widget border. Defaults to `#c9cace`.
	WidgetBorder *string `json:"widgetBorder,omitempty" tf:"widget_border,omitempty"`
}

type ColorsObservation struct {

	// (String) Base focus color. Defaults to #635dff.
	// Base focus color. Defaults to `#635dff`.
	BaseFocusColor *string `json:"baseFocusColor,omitempty" tf:"base_focus_color,omitempty"`

	// (String) Base hover color. Defaults to #000000.
	// Base hover color. Defaults to `#000000`.
	BaseHoverColor *string `json:"baseHoverColor,omitempty" tf:"base_hover_color,omitempty"`

	// (String) Body text. Defaults to #1e212a.
	// Body text. Defaults to `#1e212a`.
	BodyText *string `json:"bodyText,omitempty" tf:"body_text,omitempty"`

	// (String) Captcha Widget Theme.
	// Captcha Widget Theme.
	CaptchaWidgetTheme *string `json:"captchaWidgetTheme,omitempty" tf:"captcha_widget_theme,omitempty"`

	// (String) Error. Defaults to #d03c38.
	// Error. Defaults to `#d03c38`.
	Error *string `json:"error,omitempty" tf:"error,omitempty"`

	// (String) Header. Defaults to #1e212a.
	// Header. Defaults to `#1e212a`.
	Header *string `json:"header,omitempty" tf:"header,omitempty"`

	// (String) Icons. Defaults to #65676e.
	// Icons. Defaults to `#65676e`.
	Icons *string `json:"icons,omitempty" tf:"icons,omitempty"`

	// (String) Input background. Defaults to #ffffff.
	// Input background. Defaults to `#ffffff`.
	InputBackground *string `json:"inputBackground,omitempty" tf:"input_background,omitempty"`

	// (String) Input border. Defaults to #c9cace.
	// Input border. Defaults to `#c9cace`.
	InputBorder *string `json:"inputBorder,omitempty" tf:"input_border,omitempty"`

	// (String) Input filled text. Defaults to #000000.
	// Input filled text. Defaults to `#000000`.
	InputFilledText *string `json:"inputFilledText,omitempty" tf:"input_filled_text,omitempty"`

	// (String) Input labels & placeholders. Defaults to #65676e.
	// Input labels & placeholders. Defaults to `#65676e`.
	InputLabelsPlaceholders *string `json:"inputLabelsPlaceholders,omitempty" tf:"input_labels_placeholders,omitempty"`

	// (String) Links & focused components. Defaults to #635dff.
	// Links & focused components. Defaults to `#635dff`.
	LinksFocusedComponents *string `json:"linksFocusedComponents,omitempty" tf:"links_focused_components,omitempty"`

	// (String) Primary button. Defaults to #635dff.
	// Primary button. Defaults to `#635dff`.
	PrimaryButton *string `json:"primaryButton,omitempty" tf:"primary_button,omitempty"`

	// (String) Primary button label. Defaults to #ffffff.
	// Primary button label. Defaults to `#ffffff`.
	PrimaryButtonLabel *string `json:"primaryButtonLabel,omitempty" tf:"primary_button_label,omitempty"`

	// (String) Secondary button border. Defaults to #c9cace.
	// Secondary button border. Defaults to `#c9cace`.
	SecondaryButtonBorder *string `json:"secondaryButtonBorder,omitempty" tf:"secondary_button_border,omitempty"`

	// (String) Secondary button label. Defaults to #1e212a.
	// Secondary button label. Defaults to `#1e212a`.
	SecondaryButtonLabel *string `json:"secondaryButtonLabel,omitempty" tf:"secondary_button_label,omitempty"`

	// (String) Success. Defaults to #13a688.
	// Success. Defaults to `#13a688`.
	Success *string `json:"success,omitempty" tf:"success,omitempty"`

	// (String) Widget background. Defaults to #ffffff.
	// Widget background. Defaults to `#ffffff`.
	WidgetBackground *string `json:"widgetBackground,omitempty" tf:"widget_background,omitempty"`

	// (String) Widget border. Defaults to #c9cace.
	// Widget border. Defaults to `#c9cace`.
	WidgetBorder *string `json:"widgetBorder,omitempty" tf:"widget_border,omitempty"`
}

type ColorsParameters struct {

	// (String) Base focus color. Defaults to #635dff.
	// Base focus color. Defaults to `#635dff`.
	// +kubebuilder:validation:Optional
	BaseFocusColor *string `json:"baseFocusColor,omitempty" tf:"base_focus_color,omitempty"`

	// (String) Base hover color. Defaults to #000000.
	// Base hover color. Defaults to `#000000`.
	// +kubebuilder:validation:Optional
	BaseHoverColor *string `json:"baseHoverColor,omitempty" tf:"base_hover_color,omitempty"`

	// (String) Body text. Defaults to #1e212a.
	// Body text. Defaults to `#1e212a`.
	// +kubebuilder:validation:Optional
	BodyText *string `json:"bodyText,omitempty" tf:"body_text,omitempty"`

	// (String) Captcha Widget Theme.
	// Captcha Widget Theme.
	// +kubebuilder:validation:Optional
	CaptchaWidgetTheme *string `json:"captchaWidgetTheme,omitempty" tf:"captcha_widget_theme,omitempty"`

	// (String) Error. Defaults to #d03c38.
	// Error. Defaults to `#d03c38`.
	// +kubebuilder:validation:Optional
	Error *string `json:"error,omitempty" tf:"error,omitempty"`

	// (String) Header. Defaults to #1e212a.
	// Header. Defaults to `#1e212a`.
	// +kubebuilder:validation:Optional
	Header *string `json:"header,omitempty" tf:"header,omitempty"`

	// (String) Icons. Defaults to #65676e.
	// Icons. Defaults to `#65676e`.
	// +kubebuilder:validation:Optional
	Icons *string `json:"icons,omitempty" tf:"icons,omitempty"`

	// (String) Input background. Defaults to #ffffff.
	// Input background. Defaults to `#ffffff`.
	// +kubebuilder:validation:Optional
	InputBackground *string `json:"inputBackground,omitempty" tf:"input_background,omitempty"`

	// (String) Input border. Defaults to #c9cace.
	// Input border. Defaults to `#c9cace`.
	// +kubebuilder:validation:Optional
	InputBorder *string `json:"inputBorder,omitempty" tf:"input_border,omitempty"`

	// (String) Input filled text. Defaults to #000000.
	// Input filled text. Defaults to `#000000`.
	// +kubebuilder:validation:Optional
	InputFilledText *string `json:"inputFilledText,omitempty" tf:"input_filled_text,omitempty"`

	// (String) Input labels & placeholders. Defaults to #65676e.
	// Input labels & placeholders. Defaults to `#65676e`.
	// +kubebuilder:validation:Optional
	InputLabelsPlaceholders *string `json:"inputLabelsPlaceholders,omitempty" tf:"input_labels_placeholders,omitempty"`

	// (String) Links & focused components. Defaults to #635dff.
	// Links & focused components. Defaults to `#635dff`.
	// +kubebuilder:validation:Optional
	LinksFocusedComponents *string `json:"linksFocusedComponents,omitempty" tf:"links_focused_components,omitempty"`

	// (String) Primary button. Defaults to #635dff.
	// Primary button. Defaults to `#635dff`.
	// +kubebuilder:validation:Optional
	PrimaryButton *string `json:"primaryButton,omitempty" tf:"primary_button,omitempty"`

	// (String) Primary button label. Defaults to #ffffff.
	// Primary button label. Defaults to `#ffffff`.
	// +kubebuilder:validation:Optional
	PrimaryButtonLabel *string `json:"primaryButtonLabel,omitempty" tf:"primary_button_label,omitempty"`

	// (String) Secondary button border. Defaults to #c9cace.
	// Secondary button border. Defaults to `#c9cace`.
	// +kubebuilder:validation:Optional
	SecondaryButtonBorder *string `json:"secondaryButtonBorder,omitempty" tf:"secondary_button_border,omitempty"`

	// (String) Secondary button label. Defaults to #1e212a.
	// Secondary button label. Defaults to `#1e212a`.
	// +kubebuilder:validation:Optional
	SecondaryButtonLabel *string `json:"secondaryButtonLabel,omitempty" tf:"secondary_button_label,omitempty"`

	// (String) Success. Defaults to #13a688.
	// Success. Defaults to `#13a688`.
	// +kubebuilder:validation:Optional
	Success *string `json:"success,omitempty" tf:"success,omitempty"`

	// (String) Widget background. Defaults to #ffffff.
	// Widget background. Defaults to `#ffffff`.
	// +kubebuilder:validation:Optional
	WidgetBackground *string `json:"widgetBackground,omitempty" tf:"widget_background,omitempty"`

	// (String) Widget border. Defaults to #c9cace.
	// Widget border. Defaults to `#c9cace`.
	// +kubebuilder:validation:Optional
	WidgetBorder *string `json:"widgetBorder,omitempty" tf:"widget_border,omitempty"`
}

type FontsInitParameters struct {

	// (String) Body text. Defaults to #1e212a.
	// Body text.
	BodyText []BodyTextInitParameters `json:"bodyText,omitempty" tf:"body_text,omitempty"`

	// (Block List, Min: 1, Max: 1) Buttons text. (see below for nested schema)
	// Buttons text.
	ButtonsText []ButtonsTextInitParameters `json:"buttonsText,omitempty" tf:"buttons_text,omitempty"`

	// (String) Font URL. Defaults to an empty string.
	// Font URL. Defaults to an empty string.
	FontURL *string `json:"fontUrl,omitempty" tf:"font_url,omitempty"`

	// (Block List, Min: 1, Max: 1) Input labels. (see below for nested schema)
	// Input labels.
	InputLabels []InputLabelsInitParameters `json:"inputLabels,omitempty" tf:"input_labels,omitempty"`

	// (Block List, Min: 1, Max: 1) Links. (see below for nested schema)
	// Links.
	Links []LinksInitParameters `json:"links,omitempty" tf:"links,omitempty"`

	// (String) Links style. Defaults to normal.
	// Links style. Defaults to `normal`.
	LinksStyle *string `json:"linksStyle,omitempty" tf:"links_style,omitempty"`

	// (Number) Reference text size. Value needs to be between 12 and 24. Defaults to 16.0.
	// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
	ReferenceTextSize *float64 `json:"referenceTextSize,omitempty" tf:"reference_text_size,omitempty"`

	// (Block List, Min: 1, Max: 1) Subtitle. (see below for nested schema)
	// Subtitle.
	Subtitle []SubtitleInitParameters `json:"subtitle,omitempty" tf:"subtitle,omitempty"`

	// (Block List, Min: 1, Max: 1) Title. (see below for nested schema)
	// Title.
	Title []TitleInitParameters `json:"title,omitempty" tf:"title,omitempty"`
}

type FontsObservation struct {

	// (String) Body text. Defaults to #1e212a.
	// Body text.
	BodyText []BodyTextObservation `json:"bodyText,omitempty" tf:"body_text,omitempty"`

	// (Block List, Min: 1, Max: 1) Buttons text. (see below for nested schema)
	// Buttons text.
	ButtonsText []ButtonsTextObservation `json:"buttonsText,omitempty" tf:"buttons_text,omitempty"`

	// (String) Font URL. Defaults to an empty string.
	// Font URL. Defaults to an empty string.
	FontURL *string `json:"fontUrl,omitempty" tf:"font_url,omitempty"`

	// (Block List, Min: 1, Max: 1) Input labels. (see below for nested schema)
	// Input labels.
	InputLabels []InputLabelsObservation `json:"inputLabels,omitempty" tf:"input_labels,omitempty"`

	// (Block List, Min: 1, Max: 1) Links. (see below for nested schema)
	// Links.
	Links []LinksObservation `json:"links,omitempty" tf:"links,omitempty"`

	// (String) Links style. Defaults to normal.
	// Links style. Defaults to `normal`.
	LinksStyle *string `json:"linksStyle,omitempty" tf:"links_style,omitempty"`

	// (Number) Reference text size. Value needs to be between 12 and 24. Defaults to 16.0.
	// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
	ReferenceTextSize *float64 `json:"referenceTextSize,omitempty" tf:"reference_text_size,omitempty"`

	// (Block List, Min: 1, Max: 1) Subtitle. (see below for nested schema)
	// Subtitle.
	Subtitle []SubtitleObservation `json:"subtitle,omitempty" tf:"subtitle,omitempty"`

	// (Block List, Min: 1, Max: 1) Title. (see below for nested schema)
	// Title.
	Title []TitleObservation `json:"title,omitempty" tf:"title,omitempty"`
}

type FontsParameters struct {

	// (String) Body text. Defaults to #1e212a.
	// Body text.
	// +kubebuilder:validation:Optional
	BodyText []BodyTextParameters `json:"bodyText" tf:"body_text,omitempty"`

	// (Block List, Min: 1, Max: 1) Buttons text. (see below for nested schema)
	// Buttons text.
	// +kubebuilder:validation:Optional
	ButtonsText []ButtonsTextParameters `json:"buttonsText" tf:"buttons_text,omitempty"`

	// (String) Font URL. Defaults to an empty string.
	// Font URL. Defaults to an empty string.
	// +kubebuilder:validation:Optional
	FontURL *string `json:"fontUrl,omitempty" tf:"font_url,omitempty"`

	// (Block List, Min: 1, Max: 1) Input labels. (see below for nested schema)
	// Input labels.
	// +kubebuilder:validation:Optional
	InputLabels []InputLabelsParameters `json:"inputLabels" tf:"input_labels,omitempty"`

	// (Block List, Min: 1, Max: 1) Links. (see below for nested schema)
	// Links.
	// +kubebuilder:validation:Optional
	Links []LinksParameters `json:"links" tf:"links,omitempty"`

	// (String) Links style. Defaults to normal.
	// Links style. Defaults to `normal`.
	// +kubebuilder:validation:Optional
	LinksStyle *string `json:"linksStyle,omitempty" tf:"links_style,omitempty"`

	// (Number) Reference text size. Value needs to be between 12 and 24. Defaults to 16.0.
	// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
	// +kubebuilder:validation:Optional
	ReferenceTextSize *float64 `json:"referenceTextSize,omitempty" tf:"reference_text_size,omitempty"`

	// (Block List, Min: 1, Max: 1) Subtitle. (see below for nested schema)
	// Subtitle.
	// +kubebuilder:validation:Optional
	Subtitle []SubtitleParameters `json:"subtitle" tf:"subtitle,omitempty"`

	// (Block List, Min: 1, Max: 1) Title. (see below for nested schema)
	// Title.
	// +kubebuilder:validation:Optional
	Title []TitleParameters `json:"title" tf:"title,omitempty"`
}

type InputLabelsInitParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Input labels bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Input labels size. Value needs to be between `0` and `150`. Defaults to `100.0`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type InputLabelsObservation struct {

	// (Boolean) Body text bold. Defaults to false.
	// Input labels bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Input labels size. Value needs to be between `0` and `150`. Defaults to `100.0`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type InputLabelsParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Input labels bold. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Input labels size. Value needs to be between `0` and `150`. Defaults to `100.0`.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type LinksInitParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Links bold. Defaults to `true`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Links size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type LinksObservation struct {

	// (Boolean) Body text bold. Defaults to false.
	// Links bold. Defaults to `true`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Links size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type LinksParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Links bold. Defaults to `true`.
	// +kubebuilder:validation:Optional
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Links size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type PageBackgroundInitParameters struct {

	// (String) Background color. Defaults to #000000.
	// Background color. Defaults to `#000000`.
	BackgroundColor *string `json:"backgroundColor,omitempty" tf:"background_color,omitempty"`

	// (String) Background image url. Defaults to an empty string.
	// Background image url. Defaults to an empty string.
	BackgroundImageURL *string `json:"backgroundImageUrl,omitempty" tf:"background_image_url,omitempty"`

	// (String) Page layout. Available options: center, left, right. Defaults to center.
	// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
	PageLayout *string `json:"pageLayout,omitempty" tf:"page_layout,omitempty"`
}

type PageBackgroundObservation struct {

	// (String) Background color. Defaults to #000000.
	// Background color. Defaults to `#000000`.
	BackgroundColor *string `json:"backgroundColor,omitempty" tf:"background_color,omitempty"`

	// (String) Background image url. Defaults to an empty string.
	// Background image url. Defaults to an empty string.
	BackgroundImageURL *string `json:"backgroundImageUrl,omitempty" tf:"background_image_url,omitempty"`

	// (String) Page layout. Available options: center, left, right. Defaults to center.
	// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
	PageLayout *string `json:"pageLayout,omitempty" tf:"page_layout,omitempty"`
}

type PageBackgroundParameters struct {

	// (String) Background color. Defaults to #000000.
	// Background color. Defaults to `#000000`.
	// +kubebuilder:validation:Optional
	BackgroundColor *string `json:"backgroundColor,omitempty" tf:"background_color,omitempty"`

	// (String) Background image url. Defaults to an empty string.
	// Background image url. Defaults to an empty string.
	// +kubebuilder:validation:Optional
	BackgroundImageURL *string `json:"backgroundImageUrl,omitempty" tf:"background_image_url,omitempty"`

	// (String) Page layout. Available options: center, left, right. Defaults to center.
	// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
	// +kubebuilder:validation:Optional
	PageLayout *string `json:"pageLayout,omitempty" tf:"page_layout,omitempty"`
}

type SubtitleInitParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Subtitle bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Subtitle size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type SubtitleObservation struct {

	// (Boolean) Body text bold. Defaults to false.
	// Subtitle bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Subtitle size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type SubtitleParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Subtitle bold. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Subtitle size. Value needs to be between `0` and `150`. Defaults to `87.5`.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type ThemeInitParameters struct {

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Borders []BordersInitParameters `json:"borders,omitempty" tf:"borders,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Colors []ColorsInitParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// (String) The display name for the branding theme.
	// The display name for the branding theme.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Fonts []FontsInitParameters `json:"fonts,omitempty" tf:"fonts,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	PageBackground []PageBackgroundInitParameters `json:"pageBackground,omitempty" tf:"page_background,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Widget []WidgetInitParameters `json:"widget,omitempty" tf:"widget,omitempty"`
}

type ThemeObservation struct {

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Borders []BordersObservation `json:"borders,omitempty" tf:"borders,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Colors []ColorsObservation `json:"colors,omitempty" tf:"colors,omitempty"`

	// (String) The display name for the branding theme.
	// The display name for the branding theme.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Fonts []FontsObservation `json:"fonts,omitempty" tf:"fonts,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	PageBackground []PageBackgroundObservation `json:"pageBackground,omitempty" tf:"page_background,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	Widget []WidgetObservation `json:"widget,omitempty" tf:"widget,omitempty"`
}

type ThemeParameters struct {

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Borders []BordersParameters `json:"borders,omitempty" tf:"borders,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Colors []ColorsParameters `json:"colors,omitempty" tf:"colors,omitempty"`

	// (String) The display name for the branding theme.
	// The display name for the branding theme.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Fonts []FontsParameters `json:"fonts,omitempty" tf:"fonts,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	PageBackground []PageBackgroundParameters `json:"pageBackground,omitempty" tf:"page_background,omitempty"`

	// (Block List, Min: 1, Max: 1) (see below for nested schema)
	// +kubebuilder:validation:Optional
	Widget []WidgetParameters `json:"widget,omitempty" tf:"widget,omitempty"`
}

type TitleInitParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Title bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Title size. Value needs to be between `75` and `150`. Defaults to `150.0`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type TitleObservation struct {

	// (Boolean) Body text bold. Defaults to false.
	// Title bold. Defaults to `false`.
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Title size. Value needs to be between `75` and `150`. Defaults to `150.0`.
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type TitleParameters struct {

	// (Boolean) Body text bold. Defaults to false.
	// Title bold. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Bold *bool `json:"bold,omitempty" tf:"bold,omitempty"`

	// (Number) Body text size. Value needs to be between 0 and 150. Defaults to 87.5.
	// Title size. Value needs to be between `75` and `150`. Defaults to `150.0`.
	// +kubebuilder:validation:Optional
	Size *float64 `json:"size,omitempty" tf:"size,omitempty"`
}

type WidgetInitParameters struct {

	// (String) Header text alignment. Available options: center, left, right. Defaults to center.
	// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
	HeaderTextAlignment *string `json:"headerTextAlignment,omitempty" tf:"header_text_alignment,omitempty"`

	// (Number) Logo height. Value needs to be between 1 and 100. Defaults to 52.0.
	// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
	LogoHeight *float64 `json:"logoHeight,omitempty" tf:"logo_height,omitempty"`

	// (String) Logo position. Available options: center, left, right, none. Defaults to center.
	// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
	LogoPosition *string `json:"logoPosition,omitempty" tf:"logo_position,omitempty"`

	// (String) Logo url. Defaults to an empty string.
	// Logo url. Defaults to an empty string.
	LogoURL *string `json:"logoUrl,omitempty" tf:"logo_url,omitempty"`

	// (String) Social buttons layout. Available options: bottom, top. Defaults to bottom.
	// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
	SocialButtonsLayout *string `json:"socialButtonsLayout,omitempty" tf:"social_buttons_layout,omitempty"`
}

type WidgetObservation struct {

	// (String) Header text alignment. Available options: center, left, right. Defaults to center.
	// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
	HeaderTextAlignment *string `json:"headerTextAlignment,omitempty" tf:"header_text_alignment,omitempty"`

	// (Number) Logo height. Value needs to be between 1 and 100. Defaults to 52.0.
	// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
	LogoHeight *float64 `json:"logoHeight,omitempty" tf:"logo_height,omitempty"`

	// (String) Logo position. Available options: center, left, right, none. Defaults to center.
	// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
	LogoPosition *string `json:"logoPosition,omitempty" tf:"logo_position,omitempty"`

	// (String) Logo url. Defaults to an empty string.
	// Logo url. Defaults to an empty string.
	LogoURL *string `json:"logoUrl,omitempty" tf:"logo_url,omitempty"`

	// (String) Social buttons layout. Available options: bottom, top. Defaults to bottom.
	// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
	SocialButtonsLayout *string `json:"socialButtonsLayout,omitempty" tf:"social_buttons_layout,omitempty"`
}

type WidgetParameters struct {

	// (String) Header text alignment. Available options: center, left, right. Defaults to center.
	// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
	// +kubebuilder:validation:Optional
	HeaderTextAlignment *string `json:"headerTextAlignment,omitempty" tf:"header_text_alignment,omitempty"`

	// (Number) Logo height. Value needs to be between 1 and 100. Defaults to 52.0.
	// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
	// +kubebuilder:validation:Optional
	LogoHeight *float64 `json:"logoHeight,omitempty" tf:"logo_height,omitempty"`

	// (String) Logo position. Available options: center, left, right, none. Defaults to center.
	// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
	// +kubebuilder:validation:Optional
	LogoPosition *string `json:"logoPosition,omitempty" tf:"logo_position,omitempty"`

	// (String) Logo url. Defaults to an empty string.
	// Logo url. Defaults to an empty string.
	// +kubebuilder:validation:Optional
	LogoURL *string `json:"logoUrl,omitempty" tf:"logo_url,omitempty"`

	// (String) Social buttons layout. Available options: bottom, top. Defaults to bottom.
	// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
	// +kubebuilder:validation:Optional
	SocialButtonsLayout *string `json:"socialButtonsLayout,omitempty" tf:"social_buttons_layout,omitempty"`
}

// ThemeSpec defines the desired state of Theme
type ThemeSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ThemeParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ThemeInitParameters `json:"initProvider,omitempty"`
}

// ThemeStatus defines the observed state of Theme.
type ThemeStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ThemeObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Theme is the Schema for the Themes API. This resource allows you to manage branding themes for your Universal Login page within your Auth0 tenant.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,auth0}
type Theme struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.borders) || (has(self.initProvider) && has(self.initProvider.borders))",message="spec.forProvider.borders is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.colors) || (has(self.initProvider) && has(self.initProvider.colors))",message="spec.forProvider.colors is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.fonts) || (has(self.initProvider) && has(self.initProvider.fonts))",message="spec.forProvider.fonts is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.pageBackground) || (has(self.initProvider) && has(self.initProvider.pageBackground))",message="spec.forProvider.pageBackground is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.widget) || (has(self.initProvider) && has(self.initProvider.widget))",message="spec.forProvider.widget is a required parameter"
	Spec   ThemeSpec   `json:"spec"`
	Status ThemeStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ThemeList contains a list of Themes
type ThemeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Theme `json:"items"`
}

// Repository type metadata.
var (
	Theme_Kind             = "Theme"
	Theme_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Theme_Kind}.String()
	Theme_KindAPIVersion   = Theme_Kind + "." + CRDGroupVersion.String()
	Theme_GroupVersionKind = CRDGroupVersion.WithKind(Theme_Kind)
)

func init() {
	SchemeBuilder.Register(&Theme{}, &ThemeList{})
}
