// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthorizationDetailsInitParameters struct {

	// (Boolean) Disable authorization details.
	// Disable authorization details.
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// (String) Type of authorization details.
	// Type of authorization details.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthorizationDetailsObservation struct {

	// (Boolean) Disable authorization details.
	// Disable authorization details.
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// (String) Type of authorization details.
	// Type of authorization details.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AuthorizationDetailsParameters struct {

	// (Boolean) Disable authorization details.
	// Disable authorization details.
	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// (String) Type of authorization details.
	// Type of authorization details.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type EncryptionKeyInitParameters struct {

	// (String) Algorithm used to encrypt the token.
	// Algorithm used to encrypt the token.
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// (String) Key ID.
	// Key ID.
	Kid *string `json:"kid,omitempty" tf:"kid,omitempty"`

	// (String) Friendly name for the resource server. Cannot include < or > characters.
	// Name of the encryption key.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// formatted public key. Must be JSON escaped.
	// PEM-formatted public key. Must be JSON escaped.
	Pem *string `json:"pem,omitempty" tf:"pem,omitempty"`
}

type EncryptionKeyObservation struct {

	// (String) Algorithm used to encrypt the token.
	// Algorithm used to encrypt the token.
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// (String) Key ID.
	// Key ID.
	Kid *string `json:"kid,omitempty" tf:"kid,omitempty"`

	// (String) Friendly name for the resource server. Cannot include < or > characters.
	// Name of the encryption key.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// formatted public key. Must be JSON escaped.
	// PEM-formatted public key. Must be JSON escaped.
	Pem *string `json:"pem,omitempty" tf:"pem,omitempty"`
}

type EncryptionKeyParameters struct {

	// (String) Algorithm used to encrypt the token.
	// Algorithm used to encrypt the token.
	// +kubebuilder:validation:Optional
	Algorithm *string `json:"algorithm" tf:"algorithm,omitempty"`

	// (String) Key ID.
	// Key ID.
	// +kubebuilder:validation:Optional
	Kid *string `json:"kid,omitempty" tf:"kid,omitempty"`

	// (String) Friendly name for the resource server. Cannot include < or > characters.
	// Name of the encryption key.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// formatted public key. Must be JSON escaped.
	// PEM-formatted public key. Must be JSON escaped.
	// +kubebuilder:validation:Optional
	Pem *string `json:"pem" tf:"pem,omitempty"`
}

type ProofOfPossessionInitParameters struct {

	// (Boolean) Disable authorization details.
	// Disable proof-of-possession.
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// of-possession. Only mtls is supported.
	// Mechanism used for proof-of-possession. Only `mtls` is supported.
	Mechanism *string `json:"mechanism,omitempty" tf:"mechanism,omitempty"`

	// of-possession is required with this resource server.
	// Indicates whether proof-of-possession is required with this resource server.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`
}

type ProofOfPossessionObservation struct {

	// (Boolean) Disable authorization details.
	// Disable proof-of-possession.
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// of-possession. Only mtls is supported.
	// Mechanism used for proof-of-possession. Only `mtls` is supported.
	Mechanism *string `json:"mechanism,omitempty" tf:"mechanism,omitempty"`

	// of-possession is required with this resource server.
	// Indicates whether proof-of-possession is required with this resource server.
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`
}

type ProofOfPossessionParameters struct {

	// (Boolean) Disable authorization details.
	// Disable proof-of-possession.
	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// of-possession. Only mtls is supported.
	// Mechanism used for proof-of-possession. Only `mtls` is supported.
	// +kubebuilder:validation:Optional
	Mechanism *string `json:"mechanism,omitempty" tf:"mechanism,omitempty"`

	// of-possession is required with this resource server.
	// Indicates whether proof-of-possession is required with this resource server.
	// +kubebuilder:validation:Optional
	Required *bool `json:"required,omitempty" tf:"required,omitempty"`
}

type ServerInitParameters struct {

	// (Boolean) Indicates whether refresh tokens can be issued for this resource server.
	// Indicates whether refresh tokens can be issued for this resource server.
	AllowOfflineAccess *bool `json:"allowOfflineAccess,omitempty" tf:"allow_offline_access,omitempty"`

	// (Block List) Authorization details for this resource server. (see below for nested schema)
	// Authorization details for this resource server.
	AuthorizationDetails []AuthorizationDetailsInitParameters `json:"authorizationDetails,omitempty" tf:"authorization_details,omitempty"`

	// authorization-with-mfa, or null to disable.
	// Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or `null` to disable.
	ConsentPolicy *string `json:"consentPolicy,omitempty" tf:"consent_policy,omitempty"`

	// (Boolean) If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.
	// If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.
	EnforcePolicies *bool `json:"enforcePolicies,omitempty" tf:"enforce_policies,omitempty"`

	// (String) Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.
	// Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) Friendly name for the resource server. Cannot include < or > characters.
	// Friendly name for the resource server. Cannot include `<` or `>` characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// of-possession for this resource server. (see below for nested schema)
	// Configuration settings for proof-of-possession for this resource server.
	ProofOfPossession []ProofOfPossessionInitParameters `json:"proofOfPossession,omitempty" tf:"proof_of_possession,omitempty"`

	// (String) Algorithm used to sign JWTs. Options include HS256, RS256, and PS256.
	// Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.
	SigningAlg *string `json:"signingAlg,omitempty" tf:"signing_alg,omitempty"`

	// (String) Secret used to sign tokens when using symmetric algorithms (HS256).
	// Secret used to sign tokens when using symmetric algorithms (HS256).
	SigningSecret *string `json:"signingSecret,omitempty" tf:"signing_secret,omitempty"`

	// (Boolean) Indicates whether to skip user consent for applications flagged as first party.
	// Indicates whether to skip user consent for applications flagged as first party.
	SkipConsentForVerifiableFirstPartyClients *bool `json:"skipConsentForVerifiableFirstPartyClients,omitempty" tf:"skip_consent_for_verifiable_first_party_clients,omitempty"`

	// (String) Dialect of access tokens that should be issued for this resource server. Options include access_token, rfc9068_profile, access_token_authz, and rfc9068_profile_authz. access_token is a JWT containing standard Auth0 claims. rfc9068_profile is a JWT conforming to the IETF JWT Access Token Profile. access_token_authz is a JWT containing standard Auth0 claims, including RBAC permissions claims. rfc9068_profile_authz is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (enforce_policies) is enabled for this API. For more details, refer to Access Token Profiles.
	// Dialect of access tokens that should be issued for this resource server. Options include `access_token`, `rfc9068_profile`, `access_token_authz`, and `rfc9068_profile_authz`. `access_token` is a JWT containing standard Auth0 claims. `rfc9068_profile` is a JWT conforming to the IETF JWT Access Token Profile. `access_token_authz` is a JWT containing standard Auth0 claims, including RBAC permissions claims. `rfc9068_profile_authz` is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (`enforce_policies`) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).
	TokenDialect *string `json:"tokenDialect,omitempty" tf:"token_dialect,omitempty"`

	// (Block List, Max: 1) Configuration for JSON Web Encryption(JWE) of tokens for this resource server. (see below for nested schema)
	// Configuration for JSON Web Encryption(JWE) of tokens for this resource server.
	TokenEncryption []TokenEncryptionInitParameters `json:"tokenEncryption,omitempty" tf:"token_encryption,omitempty"`

	// (Number) Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.
	// Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.
	TokenLifetime *float64 `json:"tokenLifetime,omitempty" tf:"token_lifetime,omitempty"`

	// (Number) Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the token_lifetime value.
	// Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.
	TokenLifetimeForWeb *float64 `json:"tokenLifetimeForWeb,omitempty" tf:"token_lifetime_for_web,omitempty"`

	// (String) URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.
	// URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.
	VerificationLocation *string `json:"verificationLocation,omitempty" tf:"verification_location,omitempty"`
}

type ServerObservation struct {

	// (Boolean) Indicates whether refresh tokens can be issued for this resource server.
	// Indicates whether refresh tokens can be issued for this resource server.
	AllowOfflineAccess *bool `json:"allowOfflineAccess,omitempty" tf:"allow_offline_access,omitempty"`

	// (Block List) Authorization details for this resource server. (see below for nested schema)
	// Authorization details for this resource server.
	AuthorizationDetails []AuthorizationDetailsObservation `json:"authorizationDetails,omitempty" tf:"authorization_details,omitempty"`

	// authorization-with-mfa, or null to disable.
	// Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or `null` to disable.
	ConsentPolicy *string `json:"consentPolicy,omitempty" tf:"consent_policy,omitempty"`

	// (Boolean) If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.
	// If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.
	EnforcePolicies *bool `json:"enforcePolicies,omitempty" tf:"enforce_policies,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.
	// Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) Friendly name for the resource server. Cannot include < or > characters.
	// Friendly name for the resource server. Cannot include `<` or `>` characters.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// of-possession for this resource server. (see below for nested schema)
	// Configuration settings for proof-of-possession for this resource server.
	ProofOfPossession []ProofOfPossessionObservation `json:"proofOfPossession,omitempty" tf:"proof_of_possession,omitempty"`

	// (String) Algorithm used to sign JWTs. Options include HS256, RS256, and PS256.
	// Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.
	SigningAlg *string `json:"signingAlg,omitempty" tf:"signing_alg,omitempty"`

	// (String) Secret used to sign tokens when using symmetric algorithms (HS256).
	// Secret used to sign tokens when using symmetric algorithms (HS256).
	SigningSecret *string `json:"signingSecret,omitempty" tf:"signing_secret,omitempty"`

	// (Boolean) Indicates whether to skip user consent for applications flagged as first party.
	// Indicates whether to skip user consent for applications flagged as first party.
	SkipConsentForVerifiableFirstPartyClients *bool `json:"skipConsentForVerifiableFirstPartyClients,omitempty" tf:"skip_consent_for_verifiable_first_party_clients,omitempty"`

	// (String) Dialect of access tokens that should be issued for this resource server. Options include access_token, rfc9068_profile, access_token_authz, and rfc9068_profile_authz. access_token is a JWT containing standard Auth0 claims. rfc9068_profile is a JWT conforming to the IETF JWT Access Token Profile. access_token_authz is a JWT containing standard Auth0 claims, including RBAC permissions claims. rfc9068_profile_authz is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (enforce_policies) is enabled for this API. For more details, refer to Access Token Profiles.
	// Dialect of access tokens that should be issued for this resource server. Options include `access_token`, `rfc9068_profile`, `access_token_authz`, and `rfc9068_profile_authz`. `access_token` is a JWT containing standard Auth0 claims. `rfc9068_profile` is a JWT conforming to the IETF JWT Access Token Profile. `access_token_authz` is a JWT containing standard Auth0 claims, including RBAC permissions claims. `rfc9068_profile_authz` is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (`enforce_policies`) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).
	TokenDialect *string `json:"tokenDialect,omitempty" tf:"token_dialect,omitempty"`

	// (Block List, Max: 1) Configuration for JSON Web Encryption(JWE) of tokens for this resource server. (see below for nested schema)
	// Configuration for JSON Web Encryption(JWE) of tokens for this resource server.
	TokenEncryption []TokenEncryptionObservation `json:"tokenEncryption,omitempty" tf:"token_encryption,omitempty"`

	// (Number) Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.
	// Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.
	TokenLifetime *float64 `json:"tokenLifetime,omitempty" tf:"token_lifetime,omitempty"`

	// (Number) Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the token_lifetime value.
	// Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.
	TokenLifetimeForWeb *float64 `json:"tokenLifetimeForWeb,omitempty" tf:"token_lifetime_for_web,omitempty"`

	// (String) URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.
	// URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.
	VerificationLocation *string `json:"verificationLocation,omitempty" tf:"verification_location,omitempty"`
}

type ServerParameters struct {

	// (Boolean) Indicates whether refresh tokens can be issued for this resource server.
	// Indicates whether refresh tokens can be issued for this resource server.
	// +kubebuilder:validation:Optional
	AllowOfflineAccess *bool `json:"allowOfflineAccess,omitempty" tf:"allow_offline_access,omitempty"`

	// (Block List) Authorization details for this resource server. (see below for nested schema)
	// Authorization details for this resource server.
	// +kubebuilder:validation:Optional
	AuthorizationDetails []AuthorizationDetailsParameters `json:"authorizationDetails,omitempty" tf:"authorization_details,omitempty"`

	// authorization-with-mfa, or null to disable.
	// Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or `null` to disable.
	// +kubebuilder:validation:Optional
	ConsentPolicy *string `json:"consentPolicy,omitempty" tf:"consent_policy,omitempty"`

	// (Boolean) If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.
	// If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.
	// +kubebuilder:validation:Optional
	EnforcePolicies *bool `json:"enforcePolicies,omitempty" tf:"enforce_policies,omitempty"`

	// (String) Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.
	// Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.
	// +kubebuilder:validation:Optional
	Identifier *string `json:"identifier,omitempty" tf:"identifier,omitempty"`

	// (String) Friendly name for the resource server. Cannot include < or > characters.
	// Friendly name for the resource server. Cannot include `<` or `>` characters.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// of-possession for this resource server. (see below for nested schema)
	// Configuration settings for proof-of-possession for this resource server.
	// +kubebuilder:validation:Optional
	ProofOfPossession []ProofOfPossessionParameters `json:"proofOfPossession,omitempty" tf:"proof_of_possession,omitempty"`

	// (String) Algorithm used to sign JWTs. Options include HS256, RS256, and PS256.
	// Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.
	// +kubebuilder:validation:Optional
	SigningAlg *string `json:"signingAlg,omitempty" tf:"signing_alg,omitempty"`

	// (String) Secret used to sign tokens when using symmetric algorithms (HS256).
	// Secret used to sign tokens when using symmetric algorithms (HS256).
	// +kubebuilder:validation:Optional
	SigningSecret *string `json:"signingSecret,omitempty" tf:"signing_secret,omitempty"`

	// (Boolean) Indicates whether to skip user consent for applications flagged as first party.
	// Indicates whether to skip user consent for applications flagged as first party.
	// +kubebuilder:validation:Optional
	SkipConsentForVerifiableFirstPartyClients *bool `json:"skipConsentForVerifiableFirstPartyClients,omitempty" tf:"skip_consent_for_verifiable_first_party_clients,omitempty"`

	// (String) Dialect of access tokens that should be issued for this resource server. Options include access_token, rfc9068_profile, access_token_authz, and rfc9068_profile_authz. access_token is a JWT containing standard Auth0 claims. rfc9068_profile is a JWT conforming to the IETF JWT Access Token Profile. access_token_authz is a JWT containing standard Auth0 claims, including RBAC permissions claims. rfc9068_profile_authz is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (enforce_policies) is enabled for this API. For more details, refer to Access Token Profiles.
	// Dialect of access tokens that should be issued for this resource server. Options include `access_token`, `rfc9068_profile`, `access_token_authz`, and `rfc9068_profile_authz`. `access_token` is a JWT containing standard Auth0 claims. `rfc9068_profile` is a JWT conforming to the IETF JWT Access Token Profile. `access_token_authz` is a JWT containing standard Auth0 claims, including RBAC permissions claims. `rfc9068_profile_authz` is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (`enforce_policies`) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).
	// +kubebuilder:validation:Optional
	TokenDialect *string `json:"tokenDialect,omitempty" tf:"token_dialect,omitempty"`

	// (Block List, Max: 1) Configuration for JSON Web Encryption(JWE) of tokens for this resource server. (see below for nested schema)
	// Configuration for JSON Web Encryption(JWE) of tokens for this resource server.
	// +kubebuilder:validation:Optional
	TokenEncryption []TokenEncryptionParameters `json:"tokenEncryption,omitempty" tf:"token_encryption,omitempty"`

	// (Number) Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.
	// Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.
	// +kubebuilder:validation:Optional
	TokenLifetime *float64 `json:"tokenLifetime,omitempty" tf:"token_lifetime,omitempty"`

	// (Number) Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the token_lifetime value.
	// Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.
	// +kubebuilder:validation:Optional
	TokenLifetimeForWeb *float64 `json:"tokenLifetimeForWeb,omitempty" tf:"token_lifetime_for_web,omitempty"`

	// (String) URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.
	// URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.
	// +kubebuilder:validation:Optional
	VerificationLocation *string `json:"verificationLocation,omitempty" tf:"verification_location,omitempty"`
}

type TokenEncryptionInitParameters struct {

	// (Boolean) Disable authorization details.
	// Disable token encryption.
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// (Block List, Max: 1) Authorization details for this resource server. (see below for nested schema)
	// Authorization details for this resource server.
	EncryptionKey []EncryptionKeyInitParameters `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// nested-jwe is supported.
	// Format of the token encryption. Only `compact-nested-jwe` is supported.
	Format *string `json:"format,omitempty" tf:"format,omitempty"`
}

type TokenEncryptionObservation struct {

	// (Boolean) Disable authorization details.
	// Disable token encryption.
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// (Block List, Max: 1) Authorization details for this resource server. (see below for nested schema)
	// Authorization details for this resource server.
	EncryptionKey []EncryptionKeyObservation `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// nested-jwe is supported.
	// Format of the token encryption. Only `compact-nested-jwe` is supported.
	Format *string `json:"format,omitempty" tf:"format,omitempty"`
}

type TokenEncryptionParameters struct {

	// (Boolean) Disable authorization details.
	// Disable token encryption.
	// +kubebuilder:validation:Optional
	Disable *bool `json:"disable,omitempty" tf:"disable,omitempty"`

	// (Block List, Max: 1) Authorization details for this resource server. (see below for nested schema)
	// Authorization details for this resource server.
	// +kubebuilder:validation:Optional
	EncryptionKey []EncryptionKeyParameters `json:"encryptionKey,omitempty" tf:"encryption_key,omitempty"`

	// nested-jwe is supported.
	// Format of the token encryption. Only `compact-nested-jwe` is supported.
	// +kubebuilder:validation:Optional
	Format *string `json:"format,omitempty" tf:"format,omitempty"`
}

// ServerSpec defines the desired state of Server
type ServerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServerInitParameters `json:"initProvider,omitempty"`
}

// ServerStatus defines the observed state of Server.
type ServerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Server is the Schema for the Servers API. With this resource, you can set up APIs that can be consumed from your authorized applications.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,auth0}
type Server struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.identifier) || (has(self.initProvider) && has(self.initProvider.identifier))",message="spec.forProvider.identifier is a required parameter"
	Spec   ServerSpec   `json:"spec"`
	Status ServerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServerList contains a list of Servers
type ServerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Server `json:"items"`
}

// Repository type metadata.
var (
	Server_Kind             = "Server"
	Server_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Server_Kind}.String()
	Server_KindAPIVersion   = Server_Kind + "." + CRDGroupVersion.String()
	Server_GroupVersionKind = CRDGroupVersion.WithKind(Server_Kind)
)

func init() {
	SchemeBuilder.Register(&Server{}, &ServerList{})
}
