//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationDetailsInitParameters) DeepCopyInto(out *AuthorizationDetailsInitParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationDetailsInitParameters.
func (in *AuthorizationDetailsInitParameters) DeepCopy() *AuthorizationDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationDetailsObservation) DeepCopyInto(out *AuthorizationDetailsObservation) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationDetailsObservation.
func (in *AuthorizationDetailsObservation) DeepCopy() *AuthorizationDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(AuthorizationDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationDetailsParameters) DeepCopyInto(out *AuthorizationDetailsParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationDetailsParameters.
func (in *AuthorizationDetailsParameters) DeepCopy() *AuthorizationDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(AuthorizationDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionKeyInitParameters) DeepCopyInto(out *EncryptionKeyInitParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pem != nil {
		in, out := &in.Pem, &out.Pem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionKeyInitParameters.
func (in *EncryptionKeyInitParameters) DeepCopy() *EncryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionKeyObservation) DeepCopyInto(out *EncryptionKeyObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pem != nil {
		in, out := &in.Pem, &out.Pem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionKeyObservation.
func (in *EncryptionKeyObservation) DeepCopy() *EncryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionKeyParameters) DeepCopyInto(out *EncryptionKeyParameters) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Kid != nil {
		in, out := &in.Kid, &out.Kid
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pem != nil {
		in, out := &in.Pem, &out.Pem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionKeyParameters.
func (in *EncryptionKeyParameters) DeepCopy() *EncryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProofOfPossessionInitParameters) DeepCopyInto(out *ProofOfPossessionInitParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProofOfPossessionInitParameters.
func (in *ProofOfPossessionInitParameters) DeepCopy() *ProofOfPossessionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProofOfPossessionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProofOfPossessionObservation) DeepCopyInto(out *ProofOfPossessionObservation) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProofOfPossessionObservation.
func (in *ProofOfPossessionObservation) DeepCopy() *ProofOfPossessionObservation {
	if in == nil {
		return nil
	}
	out := new(ProofOfPossessionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProofOfPossessionParameters) DeepCopyInto(out *ProofOfPossessionParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.Mechanism != nil {
		in, out := &in.Mechanism, &out.Mechanism
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProofOfPossessionParameters.
func (in *ProofOfPossessionParameters) DeepCopy() *ProofOfPossessionParameters {
	if in == nil {
		return nil
	}
	out := new(ProofOfPossessionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Server) DeepCopyInto(out *Server) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Server.
func (in *Server) DeepCopy() *Server {
	if in == nil {
		return nil
	}
	out := new(Server)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Server) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerInitParameters) DeepCopyInto(out *ServerInitParameters) {
	*out = *in
	if in.AllowOfflineAccess != nil {
		in, out := &in.AllowOfflineAccess, &out.AllowOfflineAccess
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationDetails != nil {
		in, out := &in.AuthorizationDetails, &out.AuthorizationDetails
		*out = make([]AuthorizationDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsentPolicy != nil {
		in, out := &in.ConsentPolicy, &out.ConsentPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnforcePolicies != nil {
		in, out := &in.EnforcePolicies, &out.EnforcePolicies
		*out = new(bool)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProofOfPossession != nil {
		in, out := &in.ProofOfPossession, &out.ProofOfPossession
		*out = make([]ProofOfPossessionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningAlg != nil {
		in, out := &in.SigningAlg, &out.SigningAlg
		*out = new(string)
		**out = **in
	}
	if in.SigningSecret != nil {
		in, out := &in.SigningSecret, &out.SigningSecret
		*out = new(string)
		**out = **in
	}
	if in.SkipConsentForVerifiableFirstPartyClients != nil {
		in, out := &in.SkipConsentForVerifiableFirstPartyClients, &out.SkipConsentForVerifiableFirstPartyClients
		*out = new(bool)
		**out = **in
	}
	if in.TokenDialect != nil {
		in, out := &in.TokenDialect, &out.TokenDialect
		*out = new(string)
		**out = **in
	}
	if in.TokenEncryption != nil {
		in, out := &in.TokenEncryption, &out.TokenEncryption
		*out = make([]TokenEncryptionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TokenLifetime != nil {
		in, out := &in.TokenLifetime, &out.TokenLifetime
		*out = new(float64)
		**out = **in
	}
	if in.TokenLifetimeForWeb != nil {
		in, out := &in.TokenLifetimeForWeb, &out.TokenLifetimeForWeb
		*out = new(float64)
		**out = **in
	}
	if in.VerificationLocation != nil {
		in, out := &in.VerificationLocation, &out.VerificationLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerInitParameters.
func (in *ServerInitParameters) DeepCopy() *ServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerList) DeepCopyInto(out *ServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Server, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerList.
func (in *ServerList) DeepCopy() *ServerList {
	if in == nil {
		return nil
	}
	out := new(ServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerObservation) DeepCopyInto(out *ServerObservation) {
	*out = *in
	if in.AllowOfflineAccess != nil {
		in, out := &in.AllowOfflineAccess, &out.AllowOfflineAccess
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationDetails != nil {
		in, out := &in.AuthorizationDetails, &out.AuthorizationDetails
		*out = make([]AuthorizationDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsentPolicy != nil {
		in, out := &in.ConsentPolicy, &out.ConsentPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnforcePolicies != nil {
		in, out := &in.EnforcePolicies, &out.EnforcePolicies
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProofOfPossession != nil {
		in, out := &in.ProofOfPossession, &out.ProofOfPossession
		*out = make([]ProofOfPossessionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningAlg != nil {
		in, out := &in.SigningAlg, &out.SigningAlg
		*out = new(string)
		**out = **in
	}
	if in.SigningSecret != nil {
		in, out := &in.SigningSecret, &out.SigningSecret
		*out = new(string)
		**out = **in
	}
	if in.SkipConsentForVerifiableFirstPartyClients != nil {
		in, out := &in.SkipConsentForVerifiableFirstPartyClients, &out.SkipConsentForVerifiableFirstPartyClients
		*out = new(bool)
		**out = **in
	}
	if in.TokenDialect != nil {
		in, out := &in.TokenDialect, &out.TokenDialect
		*out = new(string)
		**out = **in
	}
	if in.TokenEncryption != nil {
		in, out := &in.TokenEncryption, &out.TokenEncryption
		*out = make([]TokenEncryptionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TokenLifetime != nil {
		in, out := &in.TokenLifetime, &out.TokenLifetime
		*out = new(float64)
		**out = **in
	}
	if in.TokenLifetimeForWeb != nil {
		in, out := &in.TokenLifetimeForWeb, &out.TokenLifetimeForWeb
		*out = new(float64)
		**out = **in
	}
	if in.VerificationLocation != nil {
		in, out := &in.VerificationLocation, &out.VerificationLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerObservation.
func (in *ServerObservation) DeepCopy() *ServerObservation {
	if in == nil {
		return nil
	}
	out := new(ServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerParameters) DeepCopyInto(out *ServerParameters) {
	*out = *in
	if in.AllowOfflineAccess != nil {
		in, out := &in.AllowOfflineAccess, &out.AllowOfflineAccess
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationDetails != nil {
		in, out := &in.AuthorizationDetails, &out.AuthorizationDetails
		*out = make([]AuthorizationDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsentPolicy != nil {
		in, out := &in.ConsentPolicy, &out.ConsentPolicy
		*out = new(string)
		**out = **in
	}
	if in.EnforcePolicies != nil {
		in, out := &in.EnforcePolicies, &out.EnforcePolicies
		*out = new(bool)
		**out = **in
	}
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProofOfPossession != nil {
		in, out := &in.ProofOfPossession, &out.ProofOfPossession
		*out = make([]ProofOfPossessionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SigningAlg != nil {
		in, out := &in.SigningAlg, &out.SigningAlg
		*out = new(string)
		**out = **in
	}
	if in.SigningSecret != nil {
		in, out := &in.SigningSecret, &out.SigningSecret
		*out = new(string)
		**out = **in
	}
	if in.SkipConsentForVerifiableFirstPartyClients != nil {
		in, out := &in.SkipConsentForVerifiableFirstPartyClients, &out.SkipConsentForVerifiableFirstPartyClients
		*out = new(bool)
		**out = **in
	}
	if in.TokenDialect != nil {
		in, out := &in.TokenDialect, &out.TokenDialect
		*out = new(string)
		**out = **in
	}
	if in.TokenEncryption != nil {
		in, out := &in.TokenEncryption, &out.TokenEncryption
		*out = make([]TokenEncryptionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TokenLifetime != nil {
		in, out := &in.TokenLifetime, &out.TokenLifetime
		*out = new(float64)
		**out = **in
	}
	if in.TokenLifetimeForWeb != nil {
		in, out := &in.TokenLifetimeForWeb, &out.TokenLifetimeForWeb
		*out = new(float64)
		**out = **in
	}
	if in.VerificationLocation != nil {
		in, out := &in.VerificationLocation, &out.VerificationLocation
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerParameters.
func (in *ServerParameters) DeepCopy() *ServerParameters {
	if in == nil {
		return nil
	}
	out := new(ServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSpec) DeepCopyInto(out *ServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSpec.
func (in *ServerSpec) DeepCopy() *ServerSpec {
	if in == nil {
		return nil
	}
	out := new(ServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerStatus) DeepCopyInto(out *ServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerStatus.
func (in *ServerStatus) DeepCopy() *ServerStatus {
	if in == nil {
		return nil
	}
	out := new(ServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenEncryptionInitParameters) DeepCopyInto(out *TokenEncryptionInitParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = make([]EncryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenEncryptionInitParameters.
func (in *TokenEncryptionInitParameters) DeepCopy() *TokenEncryptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(TokenEncryptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenEncryptionObservation) DeepCopyInto(out *TokenEncryptionObservation) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = make([]EncryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenEncryptionObservation.
func (in *TokenEncryptionObservation) DeepCopy() *TokenEncryptionObservation {
	if in == nil {
		return nil
	}
	out := new(TokenEncryptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TokenEncryptionParameters) DeepCopyInto(out *TokenEncryptionParameters) {
	*out = *in
	if in.Disable != nil {
		in, out := &in.Disable, &out.Disable
		*out = new(bool)
		**out = **in
	}
	if in.EncryptionKey != nil {
		in, out := &in.EncryptionKey, &out.EncryptionKey
		*out = make([]EncryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TokenEncryptionParameters.
func (in *TokenEncryptionParameters) DeepCopy() *TokenEncryptionParameters {
	if in == nil {
		return nil
	}
	out := new(TokenEncryptionParameters)
	in.DeepCopyInto(out)
	return out
}
