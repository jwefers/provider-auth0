// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VaultConnectionInitParameters struct {

	// (String) Custom account name of the vault connection.
	// Custom account name of the vault connection.
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// (String) App identifier of the vault connection.
	// App identifier of the vault connection.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// (String) Environment of the vault connection.
	// Environment of the vault connection.
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// (String) Fingerprint of the vault connection.
	// Fingerprint of the vault connection.
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint,omitempty"`

	// (String) Name of the vault connection.
	// Name of the vault connection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	Setup map[string]*string `json:"setupSecretRef,omitempty" tf:"-"`
}

type VaultConnectionObservation struct {

	// (String) Custom account name of the vault connection.
	// Custom account name of the vault connection.
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// (String) App identifier of the vault connection.
	// App identifier of the vault connection.
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// (String) Environment of the vault connection.
	// Environment of the vault connection.
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// (String) Fingerprint of the vault connection.
	// Fingerprint of the vault connection.
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name of the vault connection.
	// Name of the vault connection.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) Indicates if the vault connection is configured.
	// Indicates if the vault connection is configured.
	Ready *bool `json:"ready,omitempty" tf:"ready,omitempty"`
}

type VaultConnectionParameters struct {

	// (String) Custom account name of the vault connection.
	// Custom account name of the vault connection.
	// +kubebuilder:validation:Optional
	AccountName *string `json:"accountName,omitempty" tf:"account_name,omitempty"`

	// (String) App identifier of the vault connection.
	// App identifier of the vault connection.
	// +kubebuilder:validation:Optional
	AppID *string `json:"appId,omitempty" tf:"app_id,omitempty"`

	// (String) Environment of the vault connection.
	// Environment of the vault connection.
	// +kubebuilder:validation:Optional
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// (String) Fingerprint of the vault connection.
	// Fingerprint of the vault connection.
	// +kubebuilder:validation:Optional
	Fingerprint *string `json:"fingerprint,omitempty" tf:"fingerprint,omitempty"`

	// (String) Name of the vault connection.
	// Name of the vault connection.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Map of String, Sensitive) Configuration of the vault connection. (Mapping information must be provided as key/value pairs)
	// Configuration of the vault connection. (Mapping information must be provided as key/value pairs)
	// +kubebuilder:validation:Optional
	SetupSecretRef *v1.SecretReference `json:"setupSecretRef,omitempty" tf:"-"`
}

// VaultConnectionSpec defines the desired state of VaultConnection
type VaultConnectionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VaultConnectionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VaultConnectionInitParameters `json:"initProvider,omitempty"`
}

// VaultConnectionStatus defines the observed state of VaultConnection.
type VaultConnectionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VaultConnectionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VaultConnection is the Schema for the VaultConnections API. With this resource, you can create and manage flow vault connections for a tenant.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,auth0}
type VaultConnection struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.appId) || (has(self.initProvider) && has(self.initProvider.appId))",message="spec.forProvider.appId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   VaultConnectionSpec   `json:"spec"`
	Status VaultConnectionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VaultConnectionList contains a list of VaultConnections
type VaultConnectionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VaultConnection `json:"items"`
}

// Repository type metadata.
var (
	VaultConnection_Kind             = "VaultConnection"
	VaultConnection_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VaultConnection_Kind}.String()
	VaultConnection_KindAPIVersion   = VaultConnection_Kind + "." + CRDGroupVersion.String()
	VaultConnection_GroupVersionKind = CRDGroupVersion.WithKind(VaultConnection_Kind)
)

func init() {
	SchemeBuilder.Register(&VaultConnection{}, &VaultConnectionList{})
}
