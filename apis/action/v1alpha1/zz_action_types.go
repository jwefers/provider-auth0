// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ActionInitParameters struct {

	// (String) The source code of the action.
	// The source code of the action.
	Code *string `json:"code,omitempty" tf:"code,omitempty"`

	// (Block Set) List of third party npm modules, and their versions, that this action depends on. (see below for nested schema)
	// List of third party npm modules, and their versions, that this action depends on.
	Dependencies []DependenciesInitParameters `json:"dependencies,omitempty" tf:"dependencies,omitempty"`

	// (Boolean) Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
	// Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
	Deploy *bool `json:"deploy,omitempty" tf:"deploy,omitempty"`

	// (String) The name of the action.
	// The name of the action.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The Node runtime. Possible values are: node12, node16 (not recommended), node18, node22
	// The Node runtime. Possible values are: `node12`, `node16` (not recommended), `node18`, `node22`
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// (Block Set) List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. (see below for nested schema)
	// List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported.
	Secrets []SecretsInitParameters `json:"secrets,omitempty" tf:"secrets,omitempty"`

	// (Block List, Min: 1, Max: 1) List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported. (see below for nested schema)
	// List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read [Retrieving the set of triggers available within actions](https://registry.io/providers/auth0/auth0/latest/docs/guides/action_triggers) to retrieve the latest trigger versions supported.
	SupportedTriggers []SupportedTriggersInitParameters `json:"supportedTriggers,omitempty" tf:"supported_triggers,omitempty"`
}

type ActionObservation struct {

	// (String) The source code of the action.
	// The source code of the action.
	Code *string `json:"code,omitempty" tf:"code,omitempty"`

	// (Block Set) List of third party npm modules, and their versions, that this action depends on. (see below for nested schema)
	// List of third party npm modules, and their versions, that this action depends on.
	Dependencies []DependenciesObservation `json:"dependencies,omitempty" tf:"dependencies,omitempty"`

	// (Boolean) Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
	// Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
	Deploy *bool `json:"deploy,omitempty" tf:"deploy,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the action.
	// The name of the action.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The Node runtime. Possible values are: node12, node16 (not recommended), node18, node22
	// The Node runtime. Possible values are: `node12`, `node16` (not recommended), `node18`, `node22`
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// (Block Set) List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. (see below for nested schema)
	// List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported.
	Secrets []SecretsObservation `json:"secrets,omitempty" tf:"secrets,omitempty"`

	// (Block List, Min: 1, Max: 1) List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported. (see below for nested schema)
	// List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read [Retrieving the set of triggers available within actions](https://registry.io/providers/auth0/auth0/latest/docs/guides/action_triggers) to retrieve the latest trigger versions supported.
	SupportedTriggers []SupportedTriggersObservation `json:"supportedTriggers,omitempty" tf:"supported_triggers,omitempty"`

	// (String) Version ID of the action. This value is available if deploy is set to true.
	// Version ID of the action. This value is available if `deploy` is set to true.
	VersionID *string `json:"versionId,omitempty" tf:"version_id,omitempty"`
}

type ActionParameters struct {

	// (String) The source code of the action.
	// The source code of the action.
	// +kubebuilder:validation:Optional
	Code *string `json:"code,omitempty" tf:"code,omitempty"`

	// (Block Set) List of third party npm modules, and their versions, that this action depends on. (see below for nested schema)
	// List of third party npm modules, and their versions, that this action depends on.
	// +kubebuilder:validation:Optional
	Dependencies []DependenciesParameters `json:"dependencies,omitempty" tf:"dependencies,omitempty"`

	// (Boolean) Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
	// Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
	// +kubebuilder:validation:Optional
	Deploy *bool `json:"deploy,omitempty" tf:"deploy,omitempty"`

	// (String) The name of the action.
	// The name of the action.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The Node runtime. Possible values are: node12, node16 (not recommended), node18, node22
	// The Node runtime. Possible values are: `node12`, `node16` (not recommended), `node18`, `node22`
	// +kubebuilder:validation:Optional
	Runtime *string `json:"runtime,omitempty" tf:"runtime,omitempty"`

	// (Block Set) List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. (see below for nested schema)
	// List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported.
	// +kubebuilder:validation:Optional
	Secrets []SecretsParameters `json:"secrets,omitempty" tf:"secrets,omitempty"`

	// (Block List, Min: 1, Max: 1) List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported. (see below for nested schema)
	// List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read [Retrieving the set of triggers available within actions](https://registry.io/providers/auth0/auth0/latest/docs/guides/action_triggers) to retrieve the latest trigger versions supported.
	// +kubebuilder:validation:Optional
	SupportedTriggers []SupportedTriggersParameters `json:"supportedTriggers,omitempty" tf:"supported_triggers,omitempty"`
}

type DependenciesInitParameters struct {

	// (String) The name of the action.
	// Dependency name, e.g. `lodash`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The trigger version. This regulates which runtime versions are supported.
	// Dependency version, e.g. `latest` or `4.17.21`.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DependenciesObservation struct {

	// (String) The name of the action.
	// Dependency name, e.g. `lodash`.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The trigger version. This regulates which runtime versions are supported.
	// Dependency version, e.g. `latest` or `4.17.21`.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type DependenciesParameters struct {

	// (String) The name of the action.
	// Dependency name, e.g. `lodash`.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The trigger version. This regulates which runtime versions are supported.
	// Dependency version, e.g. `latest` or `4.17.21`.
	// +kubebuilder:validation:Optional
	Version *string `json:"version" tf:"version,omitempty"`
}

type SecretsInitParameters struct {

	// (String) The name of the action.
	// Secret name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) Secret value.
	// Secret value.
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

type SecretsObservation struct {

	// (String) The name of the action.
	// Secret name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SecretsParameters struct {

	// (String) The name of the action.
	// Secret name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String, Sensitive) Secret value.
	// Secret value.
	// +kubebuilder:validation:Optional
	ValueSecretRef v1.SecretKeySelector `json:"valueSecretRef" tf:"-"`
}

type SupportedTriggersInitParameters struct {

	// (String) The ID of this resource.
	// The trigger ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The trigger version. This regulates which runtime versions are supported.
	// The trigger version. This regulates which `runtime` versions are supported.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type SupportedTriggersObservation struct {

	// (String) The ID of this resource.
	// The trigger ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The trigger version. This regulates which runtime versions are supported.
	// The trigger version. This regulates which `runtime` versions are supported.
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type SupportedTriggersParameters struct {

	// (String) The ID of this resource.
	// The trigger ID.
	// +kubebuilder:validation:Optional
	ID *string `json:"id" tf:"id,omitempty"`

	// (String) The trigger version. This regulates which runtime versions are supported.
	// The trigger version. This regulates which `runtime` versions are supported.
	// +kubebuilder:validation:Optional
	Version *string `json:"version" tf:"version,omitempty"`
}

// ActionSpec defines the desired state of Action
type ActionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ActionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ActionInitParameters `json:"initProvider,omitempty"`
}

// ActionStatus defines the observed state of Action.
type ActionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ActionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Action is the Schema for the Actions API. Actions are secure, tenant-specific, versioned functions written in Node.js that execute at certain points during the Auth0 runtime. Actions are used to customize and extend Auth0's capabilities with custom logic.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,auth0}
type Action struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.code) || (has(self.initProvider) && has(self.initProvider.code))",message="spec.forProvider.code is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.supportedTriggers) || (has(self.initProvider) && has(self.initProvider.supportedTriggers))",message="spec.forProvider.supportedTriggers is a required parameter"
	Spec   ActionSpec   `json:"spec"`
	Status ActionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ActionList contains a list of Actions
type ActionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Action `json:"items"`
}

// Repository type metadata.
var (
	Action_Kind             = "Action"
	Action_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Action_Kind}.String()
	Action_KindAPIVersion   = Action_Kind + "." + CRDGroupVersion.String()
	Action_GroupVersionKind = CRDGroupVersion.WithKind(Action_Kind)
)

func init() {
	SchemeBuilder.Register(&Action{}, &ActionList{})
}
