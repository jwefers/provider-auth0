//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedTypesInitParameters) DeepCopyInto(out *AllowedTypesInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(bool)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedTypesInitParameters.
func (in *AllowedTypesInitParameters) DeepCopy() *AllowedTypesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedTypesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedTypesObservation) DeepCopyInto(out *AllowedTypesObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(bool)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedTypesObservation.
func (in *AllowedTypesObservation) DeepCopy() *AllowedTypesObservation {
	if in == nil {
		return nil
	}
	out := new(AllowedTypesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedTypesParameters) DeepCopyInto(out *AllowedTypesParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(bool)
		**out = **in
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedTypesParameters.
func (in *AllowedTypesParameters) DeepCopy() *AllowedTypesParameters {
	if in == nil {
		return nil
	}
	out := new(AllowedTypesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeMapInitParameters) DeepCopyInto(out *AttributeMapInitParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.MappingMode != nil {
		in, out := &in.MappingMode, &out.MappingMode
		*out = new(string)
		**out = **in
	}
	if in.UserinfoScope != nil {
		in, out := &in.UserinfoScope, &out.UserinfoScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeMapInitParameters.
func (in *AttributeMapInitParameters) DeepCopy() *AttributeMapInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeMapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeMapObservation) DeepCopyInto(out *AttributeMapObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.MappingMode != nil {
		in, out := &in.MappingMode, &out.MappingMode
		*out = new(string)
		**out = **in
	}
	if in.UserinfoScope != nil {
		in, out := &in.UserinfoScope, &out.UserinfoScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeMapObservation.
func (in *AttributeMapObservation) DeepCopy() *AttributeMapObservation {
	if in == nil {
		return nil
	}
	out := new(AttributeMapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributeMapParameters) DeepCopyInto(out *AttributeMapParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.MappingMode != nil {
		in, out := &in.MappingMode, &out.MappingMode
		*out = new(string)
		**out = **in
	}
	if in.UserinfoScope != nil {
		in, out := &in.UserinfoScope, &out.UserinfoScope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributeMapParameters.
func (in *AttributeMapParameters) DeepCopy() *AttributeMapParameters {
	if in == nil {
		return nil
	}
	out := new(AttributeMapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributesInitParameters) DeepCopyInto(out *AttributesInitParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = make([]PhoneNumberInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = make([]UsernameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributesInitParameters.
func (in *AttributesInitParameters) DeepCopy() *AttributesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttributesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributesObservation) DeepCopyInto(out *AttributesObservation) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = make([]PhoneNumberObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = make([]UsernameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributesObservation.
func (in *AttributesObservation) DeepCopy() *AttributesObservation {
	if in == nil {
		return nil
	}
	out := new(AttributesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttributesParameters) DeepCopyInto(out *AttributesParameters) {
	*out = *in
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = make([]EmailParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhoneNumber != nil {
		in, out := &in.PhoneNumber, &out.PhoneNumber
		*out = make([]PhoneNumberParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = make([]UsernameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttributesParameters.
func (in *AttributesParameters) DeepCopy() *AttributesParameters {
	if in == nil {
		return nil
	}
	out := new(AttributesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationMethodsInitParameters) DeepCopyInto(out *AuthenticationMethodsInitParameters) {
	*out = *in
	if in.Passkey != nil {
		in, out := &in.Passkey, &out.Passkey
		*out = make([]PasskeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationMethodsInitParameters.
func (in *AuthenticationMethodsInitParameters) DeepCopy() *AuthenticationMethodsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationMethodsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationMethodsObservation) DeepCopyInto(out *AuthenticationMethodsObservation) {
	*out = *in
	if in.Passkey != nil {
		in, out := &in.Passkey, &out.Passkey
		*out = make([]PasskeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationMethodsObservation.
func (in *AuthenticationMethodsObservation) DeepCopy() *AuthenticationMethodsObservation {
	if in == nil {
		return nil
	}
	out := new(AuthenticationMethodsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationMethodsParameters) DeepCopyInto(out *AuthenticationMethodsParameters) {
	*out = *in
	if in.Passkey != nil {
		in, out := &in.Passkey, &out.Passkey
		*out = make([]PasskeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = make([]PasswordParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationMethodsParameters.
func (in *AuthenticationMethodsParameters) DeepCopy() *AuthenticationMethodsParameters {
	if in == nil {
		return nil
	}
	out := new(AuthenticationMethodsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Connection) DeepCopyInto(out *Connection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Connection.
func (in *Connection) DeepCopy() *Connection {
	if in == nil {
		return nil
	}
	out := new(Connection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Connection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionInitParameters) DeepCopyInto(out *ConnectionInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsDomainConnection != nil {
		in, out := &in.IsDomainConnection, &out.IsDomainConnection
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Realms != nil {
		in, out := &in.Realms, &out.Realms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShowAsButton != nil {
		in, out := &in.ShowAsButton, &out.ShowAsButton
		*out = new(bool)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionInitParameters.
func (in *ConnectionInitParameters) DeepCopy() *ConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionList) DeepCopyInto(out *ConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Connection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionList.
func (in *ConnectionList) DeepCopy() *ConnectionList {
	if in == nil {
		return nil
	}
	out := new(ConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionObservation) DeepCopyInto(out *ConnectionObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsDomainConnection != nil {
		in, out := &in.IsDomainConnection, &out.IsDomainConnection
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Realms != nil {
		in, out := &in.Realms, &out.Realms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShowAsButton != nil {
		in, out := &in.ShowAsButton, &out.ShowAsButton
		*out = new(bool)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionObservation.
func (in *ConnectionObservation) DeepCopy() *ConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionParameters) DeepCopyInto(out *ConnectionParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsDomainConnection != nil {
		in, out := &in.IsDomainConnection, &out.IsDomainConnection
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Realms != nil {
		in, out := &in.Realms, &out.Realms
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ShowAsButton != nil {
		in, out := &in.ShowAsButton, &out.ShowAsButton
		*out = new(bool)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionParameters.
func (in *ConnectionParameters) DeepCopy() *ConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSettingsInitParameters) DeepCopyInto(out *ConnectionSettingsInitParameters) {
	*out = *in
	if in.Pkce != nil {
		in, out := &in.Pkce, &out.Pkce
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSettingsInitParameters.
func (in *ConnectionSettingsInitParameters) DeepCopy() *ConnectionSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSettingsObservation) DeepCopyInto(out *ConnectionSettingsObservation) {
	*out = *in
	if in.Pkce != nil {
		in, out := &in.Pkce, &out.Pkce
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSettingsObservation.
func (in *ConnectionSettingsObservation) DeepCopy() *ConnectionSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSettingsParameters) DeepCopyInto(out *ConnectionSettingsParameters) {
	*out = *in
	if in.Pkce != nil {
		in, out := &in.Pkce, &out.Pkce
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSettingsParameters.
func (in *ConnectionSettingsParameters) DeepCopy() *ConnectionSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionSpec) DeepCopyInto(out *ConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionSpec.
func (in *ConnectionSpec) DeepCopy() *ConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(ConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStatus) DeepCopyInto(out *ConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStatus.
func (in *ConnectionStatus) DeepCopy() *ConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(ConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecryptionKeyInitParameters) DeepCopyInto(out *DecryptionKeyInitParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecryptionKeyInitParameters.
func (in *DecryptionKeyInitParameters) DeepCopy() *DecryptionKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DecryptionKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecryptionKeyObservation) DeepCopyInto(out *DecryptionKeyObservation) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecryptionKeyObservation.
func (in *DecryptionKeyObservation) DeepCopy() *DecryptionKeyObservation {
	if in == nil {
		return nil
	}
	out := new(DecryptionKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DecryptionKeyParameters) DeepCopyInto(out *DecryptionKeyParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DecryptionKeyParameters.
func (in *DecryptionKeyParameters) DeepCopy() *DecryptionKeyParameters {
	if in == nil {
		return nil
	}
	out := new(DecryptionKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailInitParameters) DeepCopyInto(out *EmailInitParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]IdentifierInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]SignupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VerificationMethod != nil {
		in, out := &in.VerificationMethod, &out.VerificationMethod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailInitParameters.
func (in *EmailInitParameters) DeepCopy() *EmailInitParameters {
	if in == nil {
		return nil
	}
	out := new(EmailInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailObservation) DeepCopyInto(out *EmailObservation) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]IdentifierObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]SignupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VerificationMethod != nil {
		in, out := &in.VerificationMethod, &out.VerificationMethod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailObservation.
func (in *EmailObservation) DeepCopy() *EmailObservation {
	if in == nil {
		return nil
	}
	out := new(EmailObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailParameters) DeepCopyInto(out *EmailParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]IdentifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]SignupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VerificationMethod != nil {
		in, out := &in.VerificationMethod, &out.VerificationMethod
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailParameters.
func (in *EmailParameters) DeepCopy() *EmailParameters {
	if in == nil {
		return nil
	}
	out := new(EmailParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayAuthenticationInitParameters) DeepCopyInto(out *GatewayAuthenticationInitParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SecretBase64Encoded != nil {
		in, out := &in.SecretBase64Encoded, &out.SecretBase64Encoded
		*out = new(bool)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayAuthenticationInitParameters.
func (in *GatewayAuthenticationInitParameters) DeepCopy() *GatewayAuthenticationInitParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayAuthenticationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayAuthenticationObservation) DeepCopyInto(out *GatewayAuthenticationObservation) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SecretBase64Encoded != nil {
		in, out := &in.SecretBase64Encoded, &out.SecretBase64Encoded
		*out = new(bool)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayAuthenticationObservation.
func (in *GatewayAuthenticationObservation) DeepCopy() *GatewayAuthenticationObservation {
	if in == nil {
		return nil
	}
	out := new(GatewayAuthenticationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GatewayAuthenticationParameters) DeepCopyInto(out *GatewayAuthenticationParameters) {
	*out = *in
	if in.Audience != nil {
		in, out := &in.Audience, &out.Audience
		*out = new(string)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.SecretBase64Encoded != nil {
		in, out := &in.SecretBase64Encoded, &out.SecretBase64Encoded
		*out = new(bool)
		**out = **in
	}
	if in.SecretSecretRef != nil {
		in, out := &in.SecretSecretRef, &out.SecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GatewayAuthenticationParameters.
func (in *GatewayAuthenticationParameters) DeepCopy() *GatewayAuthenticationParameters {
	if in == nil {
		return nil
	}
	out := new(GatewayAuthenticationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentifierInitParameters) DeepCopyInto(out *IdentifierInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentifierInitParameters.
func (in *IdentifierInitParameters) DeepCopy() *IdentifierInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdentifierInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentifierObservation) DeepCopyInto(out *IdentifierObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentifierObservation.
func (in *IdentifierObservation) DeepCopy() *IdentifierObservation {
	if in == nil {
		return nil
	}
	out := new(IdentifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentifierParameters) DeepCopyInto(out *IdentifierParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentifierParameters.
func (in *IdentifierParameters) DeepCopy() *IdentifierParameters {
	if in == nil {
		return nil
	}
	out := new(IdentifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdpInitiatedInitParameters) DeepCopyInto(out *IdpInitiatedInitParameters) {
	*out = *in
	if in.ClientAuthorizeQuery != nil {
		in, out := &in.ClientAuthorizeQuery, &out.ClientAuthorizeQuery
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientProtocol != nil {
		in, out := &in.ClientProtocol, &out.ClientProtocol
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdpInitiatedInitParameters.
func (in *IdpInitiatedInitParameters) DeepCopy() *IdpInitiatedInitParameters {
	if in == nil {
		return nil
	}
	out := new(IdpInitiatedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdpInitiatedObservation) DeepCopyInto(out *IdpInitiatedObservation) {
	*out = *in
	if in.ClientAuthorizeQuery != nil {
		in, out := &in.ClientAuthorizeQuery, &out.ClientAuthorizeQuery
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientProtocol != nil {
		in, out := &in.ClientProtocol, &out.ClientProtocol
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdpInitiatedObservation.
func (in *IdpInitiatedObservation) DeepCopy() *IdpInitiatedObservation {
	if in == nil {
		return nil
	}
	out := new(IdpInitiatedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdpInitiatedParameters) DeepCopyInto(out *IdpInitiatedParameters) {
	*out = *in
	if in.ClientAuthorizeQuery != nil {
		in, out := &in.ClientAuthorizeQuery, &out.ClientAuthorizeQuery
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientProtocol != nil {
		in, out := &in.ClientProtocol, &out.ClientProtocol
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdpInitiatedParameters.
func (in *IdpInitiatedParameters) DeepCopy() *IdpInitiatedParameters {
	if in == nil {
		return nil
	}
	out := new(IdpInitiatedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MfaInitParameters) DeepCopyInto(out *MfaInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ReturnEnrollSettings != nil {
		in, out := &in.ReturnEnrollSettings, &out.ReturnEnrollSettings
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MfaInitParameters.
func (in *MfaInitParameters) DeepCopy() *MfaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MfaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MfaObservation) DeepCopyInto(out *MfaObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ReturnEnrollSettings != nil {
		in, out := &in.ReturnEnrollSettings, &out.ReturnEnrollSettings
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MfaObservation.
func (in *MfaObservation) DeepCopy() *MfaObservation {
	if in == nil {
		return nil
	}
	out := new(MfaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MfaParameters) DeepCopyInto(out *MfaParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.ReturnEnrollSettings != nil {
		in, out := &in.ReturnEnrollSettings, &out.ReturnEnrollSettings
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MfaParameters.
func (in *MfaParameters) DeepCopy() *MfaParameters {
	if in == nil {
		return nil
	}
	out := new(MfaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.APIEnableUsers != nil {
		in, out := &in.APIEnableUsers, &out.APIEnableUsers
		*out = new(bool)
		**out = **in
	}
	if in.AdfsServer != nil {
		in, out := &in.AdfsServer, &out.AdfsServer
		*out = new(string)
		**out = **in
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AttributeMap != nil {
		in, out := &in.AttributeMap, &out.AttributeMap
		*out = make([]AttributeMapInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make([]AttributesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthParams != nil {
		in, out := &in.AuthParams, &out.AuthParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthenticationMethods != nil {
		in, out := &in.AuthenticationMethods, &out.AuthenticationMethods
		*out = make([]AuthenticationMethodsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.BruteForceProtection != nil {
		in, out := &in.BruteForceProtection, &out.BruteForceProtection
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CommunityBaseURL != nil {
		in, out := &in.CommunityBaseURL, &out.CommunityBaseURL
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ConnectionSettings != nil {
		in, out := &in.ConnectionSettings, &out.ConnectionSettings
		*out = make([]ConnectionSettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomScripts != nil {
		in, out := &in.CustomScripts, &out.CustomScripts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.DecryptionKey != nil {
		in, out := &in.DecryptionKey, &out.DecryptionKey
		*out = make([]DecryptionKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DisableCache != nil {
		in, out := &in.DisableCache, &out.DisableCache
		*out = new(bool)
		**out = **in
	}
	if in.DisableSelfServiceChangePassword != nil {
		in, out := &in.DisableSelfServiceChangePassword, &out.DisableSelfServiceChangePassword
		*out = new(bool)
		**out = **in
	}
	if in.DisableSignOut != nil {
		in, out := &in.DisableSignOut, &out.DisableSignOut
		*out = new(bool)
		**out = **in
	}
	if in.DisableSignup != nil {
		in, out := &in.DisableSignup, &out.DisableSignup
		*out = new(bool)
		**out = **in
	}
	if in.DiscoveryURL != nil {
		in, out := &in.DiscoveryURL, &out.DiscoveryURL
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DomainAliases != nil {
		in, out := &in.DomainAliases, &out.DomainAliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableScriptContext != nil {
		in, out := &in.EnableScriptContext, &out.EnableScriptContext
		*out = new(bool)
		**out = **in
	}
	if in.EnabledDatabaseCustomization != nil {
		in, out := &in.EnabledDatabaseCustomization, &out.EnabledDatabaseCustomization
		*out = new(bool)
		**out = **in
	}
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.FedMetadataXML != nil {
		in, out := &in.FedMetadataXML, &out.FedMetadataXML
		*out = new(string)
		**out = **in
	}
	if in.FieldsMap != nil {
		in, out := &in.FieldsMap, &out.FieldsMap
		*out = new(string)
		**out = **in
	}
	if in.ForwardRequestInfo != nil {
		in, out := &in.ForwardRequestInfo, &out.ForwardRequestInfo
		*out = new(bool)
		**out = **in
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.GatewayAuthentication != nil {
		in, out := &in.GatewayAuthentication, &out.GatewayAuthentication
		*out = make([]GatewayAuthenticationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayURL != nil {
		in, out := &in.GatewayURL, &out.GatewayURL
		*out = new(string)
		**out = **in
	}
	if in.GlobalTokenRevocationJwtIss != nil {
		in, out := &in.GlobalTokenRevocationJwtIss, &out.GlobalTokenRevocationJwtIss
		*out = new(string)
		**out = **in
	}
	if in.GlobalTokenRevocationJwtSub != nil {
		in, out := &in.GlobalTokenRevocationJwtSub, &out.GlobalTokenRevocationJwtSub
		*out = new(string)
		**out = **in
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
	if in.IdentityAPI != nil {
		in, out := &in.IdentityAPI, &out.IdentityAPI
		*out = new(string)
		**out = **in
	}
	if in.IdpInitiated != nil {
		in, out := &in.IdpInitiated, &out.IdpInitiated
		*out = make([]IdpInitiatedInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImportMode != nil {
		in, out := &in.ImportMode, &out.ImportMode
		*out = new(bool)
		**out = **in
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.MapUserIDToID != nil {
		in, out := &in.MapUserIDToID, &out.MapUserIDToID
		*out = new(bool)
		**out = **in
	}
	if in.MaxGroupsToRetrieve != nil {
		in, out := &in.MaxGroupsToRetrieve, &out.MaxGroupsToRetrieve
		*out = new(string)
		**out = **in
	}
	if in.MessagingServiceSid != nil {
		in, out := &in.MessagingServiceSid, &out.MessagingServiceSid
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.MetadataXML != nil {
		in, out := &in.MetadataXML, &out.MetadataXML
		*out = new(string)
		**out = **in
	}
	if in.Mfa != nil {
		in, out := &in.Mfa, &out.Mfa
		*out = make([]MfaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonPersistentAttrs != nil {
		in, out := &in.NonPersistentAttrs, &out.NonPersistentAttrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PasskeyOptions != nil {
		in, out := &in.PasskeyOptions, &out.PasskeyOptions
		*out = make([]PasskeyOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordComplexityOptions != nil {
		in, out := &in.PasswordComplexityOptions, &out.PasswordComplexityOptions
		*out = make([]PasswordComplexityOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordDictionary != nil {
		in, out := &in.PasswordDictionary, &out.PasswordDictionary
		*out = make([]PasswordDictionaryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordHistory != nil {
		in, out := &in.PasswordHistory, &out.PasswordHistory
		*out = make([]PasswordHistoryInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordNoPersonalInfo != nil {
		in, out := &in.PasswordNoPersonalInfo, &out.PasswordNoPersonalInfo
		*out = make([]PasswordNoPersonalInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = new(string)
		**out = **in
	}
	if in.PingFederateBaseURL != nil {
		in, out := &in.PingFederateBaseURL, &out.PingFederateBaseURL
		*out = new(string)
		**out = **in
	}
	if in.PkceEnabled != nil {
		in, out := &in.PkceEnabled, &out.PkceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Precedence != nil {
		in, out := &in.Precedence, &out.Precedence
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProtocolBinding != nil {
		in, out := &in.ProtocolBinding, &out.ProtocolBinding
		*out = new(string)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.RequestTemplate != nil {
		in, out := &in.RequestTemplate, &out.RequestTemplate
		*out = new(string)
		**out = **in
	}
	if in.RequiresUsername != nil {
		in, out := &in.RequiresUsername, &out.RequiresUsername
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scripts != nil {
		in, out := &in.Scripts, &out.Scripts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SetUserRootAttributes != nil {
		in, out := &in.SetUserRootAttributes, &out.SetUserRootAttributes
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrustEmailVerifiedConnection != nil {
		in, out := &in.ShouldTrustEmailVerifiedConnection, &out.ShouldTrustEmailVerifiedConnection
		*out = new(string)
		**out = **in
	}
	if in.SignInEndpoint != nil {
		in, out := &in.SignInEndpoint, &out.SignInEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SignOutEndpoint != nil {
		in, out := &in.SignOutEndpoint, &out.SignOutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SignSAMLRequest != nil {
		in, out := &in.SignSAMLRequest, &out.SignSAMLRequest
		*out = new(bool)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningCert != nil {
		in, out := &in.SigningCert, &out.SigningCert
		*out = new(string)
		**out = **in
	}
	if in.SigningKey != nil {
		in, out := &in.SigningKey, &out.SigningKey
		*out = make([]SigningKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrategyVersion != nil {
		in, out := &in.StrategyVersion, &out.StrategyVersion
		*out = new(float64)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Syntax != nil {
		in, out := &in.Syntax, &out.Syntax
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
	if in.TenantDomain != nil {
		in, out := &in.TenantDomain, &out.TenantDomain
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Totp != nil {
		in, out := &in.Totp, &out.Totp
		*out = make([]TotpInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TwilioSid != nil {
		in, out := &in.TwilioSid, &out.TwilioSid
		*out = new(string)
		**out = **in
	}
	if in.TwilioTokenSecretRef != nil {
		in, out := &in.TwilioTokenSecretRef, &out.TwilioTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpstreamParams != nil {
		in, out := &in.UpstreamParams, &out.UpstreamParams
		*out = new(string)
		**out = **in
	}
	if in.UseCertAuth != nil {
		in, out := &in.UseCertAuth, &out.UseCertAuth
		*out = new(bool)
		**out = **in
	}
	if in.UseKerberos != nil {
		in, out := &in.UseKerberos, &out.UseKerberos
		*out = new(bool)
		**out = **in
	}
	if in.UseWsfed != nil {
		in, out := &in.UseWsfed, &out.UseWsfed
		*out = new(bool)
		**out = **in
	}
	if in.UserIDAttribute != nil {
		in, out := &in.UserIDAttribute, &out.UserIDAttribute
		*out = new(string)
		**out = **in
	}
	if in.UserinfoEndpoint != nil {
		in, out := &in.UserinfoEndpoint, &out.UserinfoEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]OptionsValidationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaadCommonEndpoint != nil {
		in, out := &in.WaadCommonEndpoint, &out.WaadCommonEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.WaadProtocol != nil {
		in, out := &in.WaadProtocol, &out.WaadProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.APIEnableUsers != nil {
		in, out := &in.APIEnableUsers, &out.APIEnableUsers
		*out = new(bool)
		**out = **in
	}
	if in.AdfsServer != nil {
		in, out := &in.AdfsServer, &out.AdfsServer
		*out = new(string)
		**out = **in
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AttributeMap != nil {
		in, out := &in.AttributeMap, &out.AttributeMap
		*out = make([]AttributeMapObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make([]AttributesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthParams != nil {
		in, out := &in.AuthParams, &out.AuthParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthenticationMethods != nil {
		in, out := &in.AuthenticationMethods, &out.AuthenticationMethods
		*out = make([]AuthenticationMethodsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.BruteForceProtection != nil {
		in, out := &in.BruteForceProtection, &out.BruteForceProtection
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.CommunityBaseURL != nil {
		in, out := &in.CommunityBaseURL, &out.CommunityBaseURL
		*out = new(string)
		**out = **in
	}
	if in.ConnectionSettings != nil {
		in, out := &in.ConnectionSettings, &out.ConnectionSettings
		*out = make([]ConnectionSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomScripts != nil {
		in, out := &in.CustomScripts, &out.CustomScripts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.DecryptionKey != nil {
		in, out := &in.DecryptionKey, &out.DecryptionKey
		*out = make([]DecryptionKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DisableCache != nil {
		in, out := &in.DisableCache, &out.DisableCache
		*out = new(bool)
		**out = **in
	}
	if in.DisableSelfServiceChangePassword != nil {
		in, out := &in.DisableSelfServiceChangePassword, &out.DisableSelfServiceChangePassword
		*out = new(bool)
		**out = **in
	}
	if in.DisableSignOut != nil {
		in, out := &in.DisableSignOut, &out.DisableSignOut
		*out = new(bool)
		**out = **in
	}
	if in.DisableSignup != nil {
		in, out := &in.DisableSignup, &out.DisableSignup
		*out = new(bool)
		**out = **in
	}
	if in.DiscoveryURL != nil {
		in, out := &in.DiscoveryURL, &out.DiscoveryURL
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DomainAliases != nil {
		in, out := &in.DomainAliases, &out.DomainAliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableScriptContext != nil {
		in, out := &in.EnableScriptContext, &out.EnableScriptContext
		*out = new(bool)
		**out = **in
	}
	if in.EnabledDatabaseCustomization != nil {
		in, out := &in.EnabledDatabaseCustomization, &out.EnabledDatabaseCustomization
		*out = new(bool)
		**out = **in
	}
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.FedMetadataXML != nil {
		in, out := &in.FedMetadataXML, &out.FedMetadataXML
		*out = new(string)
		**out = **in
	}
	if in.FieldsMap != nil {
		in, out := &in.FieldsMap, &out.FieldsMap
		*out = new(string)
		**out = **in
	}
	if in.ForwardRequestInfo != nil {
		in, out := &in.ForwardRequestInfo, &out.ForwardRequestInfo
		*out = new(bool)
		**out = **in
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.GatewayAuthentication != nil {
		in, out := &in.GatewayAuthentication, &out.GatewayAuthentication
		*out = make([]GatewayAuthenticationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayURL != nil {
		in, out := &in.GatewayURL, &out.GatewayURL
		*out = new(string)
		**out = **in
	}
	if in.GlobalTokenRevocationJwtIss != nil {
		in, out := &in.GlobalTokenRevocationJwtIss, &out.GlobalTokenRevocationJwtIss
		*out = new(string)
		**out = **in
	}
	if in.GlobalTokenRevocationJwtSub != nil {
		in, out := &in.GlobalTokenRevocationJwtSub, &out.GlobalTokenRevocationJwtSub
		*out = new(string)
		**out = **in
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
	if in.IdentityAPI != nil {
		in, out := &in.IdentityAPI, &out.IdentityAPI
		*out = new(string)
		**out = **in
	}
	if in.IdpInitiated != nil {
		in, out := &in.IdpInitiated, &out.IdpInitiated
		*out = make([]IdpInitiatedObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImportMode != nil {
		in, out := &in.ImportMode, &out.ImportMode
		*out = new(bool)
		**out = **in
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.MapUserIDToID != nil {
		in, out := &in.MapUserIDToID, &out.MapUserIDToID
		*out = new(bool)
		**out = **in
	}
	if in.MaxGroupsToRetrieve != nil {
		in, out := &in.MaxGroupsToRetrieve, &out.MaxGroupsToRetrieve
		*out = new(string)
		**out = **in
	}
	if in.MessagingServiceSid != nil {
		in, out := &in.MessagingServiceSid, &out.MessagingServiceSid
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.MetadataXML != nil {
		in, out := &in.MetadataXML, &out.MetadataXML
		*out = new(string)
		**out = **in
	}
	if in.Mfa != nil {
		in, out := &in.Mfa, &out.Mfa
		*out = make([]MfaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonPersistentAttrs != nil {
		in, out := &in.NonPersistentAttrs, &out.NonPersistentAttrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PasskeyOptions != nil {
		in, out := &in.PasskeyOptions, &out.PasskeyOptions
		*out = make([]PasskeyOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordComplexityOptions != nil {
		in, out := &in.PasswordComplexityOptions, &out.PasswordComplexityOptions
		*out = make([]PasswordComplexityOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordDictionary != nil {
		in, out := &in.PasswordDictionary, &out.PasswordDictionary
		*out = make([]PasswordDictionaryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordHistory != nil {
		in, out := &in.PasswordHistory, &out.PasswordHistory
		*out = make([]PasswordHistoryObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordNoPersonalInfo != nil {
		in, out := &in.PasswordNoPersonalInfo, &out.PasswordNoPersonalInfo
		*out = make([]PasswordNoPersonalInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = new(string)
		**out = **in
	}
	if in.PingFederateBaseURL != nil {
		in, out := &in.PingFederateBaseURL, &out.PingFederateBaseURL
		*out = new(string)
		**out = **in
	}
	if in.PkceEnabled != nil {
		in, out := &in.PkceEnabled, &out.PkceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Precedence != nil {
		in, out := &in.Precedence, &out.Precedence
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProtocolBinding != nil {
		in, out := &in.ProtocolBinding, &out.ProtocolBinding
		*out = new(string)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.RequestTemplate != nil {
		in, out := &in.RequestTemplate, &out.RequestTemplate
		*out = new(string)
		**out = **in
	}
	if in.RequiresUsername != nil {
		in, out := &in.RequiresUsername, &out.RequiresUsername
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scripts != nil {
		in, out := &in.Scripts, &out.Scripts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SetUserRootAttributes != nil {
		in, out := &in.SetUserRootAttributes, &out.SetUserRootAttributes
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrustEmailVerifiedConnection != nil {
		in, out := &in.ShouldTrustEmailVerifiedConnection, &out.ShouldTrustEmailVerifiedConnection
		*out = new(string)
		**out = **in
	}
	if in.SignInEndpoint != nil {
		in, out := &in.SignInEndpoint, &out.SignInEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SignOutEndpoint != nil {
		in, out := &in.SignOutEndpoint, &out.SignOutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SignSAMLRequest != nil {
		in, out := &in.SignSAMLRequest, &out.SignSAMLRequest
		*out = new(bool)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningCert != nil {
		in, out := &in.SigningCert, &out.SigningCert
		*out = new(string)
		**out = **in
	}
	if in.SigningKey != nil {
		in, out := &in.SigningKey, &out.SigningKey
		*out = make([]SigningKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrategyVersion != nil {
		in, out := &in.StrategyVersion, &out.StrategyVersion
		*out = new(float64)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Syntax != nil {
		in, out := &in.Syntax, &out.Syntax
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
	if in.TenantDomain != nil {
		in, out := &in.TenantDomain, &out.TenantDomain
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Totp != nil {
		in, out := &in.Totp, &out.Totp
		*out = make([]TotpObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TwilioSid != nil {
		in, out := &in.TwilioSid, &out.TwilioSid
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpstreamParams != nil {
		in, out := &in.UpstreamParams, &out.UpstreamParams
		*out = new(string)
		**out = **in
	}
	if in.UseCertAuth != nil {
		in, out := &in.UseCertAuth, &out.UseCertAuth
		*out = new(bool)
		**out = **in
	}
	if in.UseKerberos != nil {
		in, out := &in.UseKerberos, &out.UseKerberos
		*out = new(bool)
		**out = **in
	}
	if in.UseWsfed != nil {
		in, out := &in.UseWsfed, &out.UseWsfed
		*out = new(bool)
		**out = **in
	}
	if in.UserIDAttribute != nil {
		in, out := &in.UserIDAttribute, &out.UserIDAttribute
		*out = new(string)
		**out = **in
	}
	if in.UserinfoEndpoint != nil {
		in, out := &in.UserinfoEndpoint, &out.UserinfoEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]OptionsValidationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaadCommonEndpoint != nil {
		in, out := &in.WaadCommonEndpoint, &out.WaadCommonEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.WaadProtocol != nil {
		in, out := &in.WaadProtocol, &out.WaadProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.APIEnableUsers != nil {
		in, out := &in.APIEnableUsers, &out.APIEnableUsers
		*out = new(bool)
		**out = **in
	}
	if in.AdfsServer != nil {
		in, out := &in.AdfsServer, &out.AdfsServer
		*out = new(string)
		**out = **in
	}
	if in.AllowedAudiences != nil {
		in, out := &in.AllowedAudiences, &out.AllowedAudiences
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AttributeMap != nil {
		in, out := &in.AttributeMap, &out.AttributeMap
		*out = make([]AttributeMapParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make([]AttributesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthParams != nil {
		in, out := &in.AuthParams, &out.AuthParams
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.AuthenticationMethods != nil {
		in, out := &in.AuthenticationMethods, &out.AuthenticationMethods
		*out = make([]AuthenticationMethodsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AuthorizationEndpoint != nil {
		in, out := &in.AuthorizationEndpoint, &out.AuthorizationEndpoint
		*out = new(string)
		**out = **in
	}
	if in.BruteForceProtection != nil {
		in, out := &in.BruteForceProtection, &out.BruteForceProtection
		*out = new(bool)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CommunityBaseURL != nil {
		in, out := &in.CommunityBaseURL, &out.CommunityBaseURL
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationSecretRef != nil {
		in, out := &in.ConfigurationSecretRef, &out.ConfigurationSecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.ConnectionSettings != nil {
		in, out := &in.ConnectionSettings, &out.ConnectionSettings
		*out = make([]ConnectionSettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomScripts != nil {
		in, out := &in.CustomScripts, &out.CustomScripts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Debug != nil {
		in, out := &in.Debug, &out.Debug
		*out = new(bool)
		**out = **in
	}
	if in.DecryptionKey != nil {
		in, out := &in.DecryptionKey, &out.DecryptionKey
		*out = make([]DecryptionKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DisableCache != nil {
		in, out := &in.DisableCache, &out.DisableCache
		*out = new(bool)
		**out = **in
	}
	if in.DisableSelfServiceChangePassword != nil {
		in, out := &in.DisableSelfServiceChangePassword, &out.DisableSelfServiceChangePassword
		*out = new(bool)
		**out = **in
	}
	if in.DisableSignOut != nil {
		in, out := &in.DisableSignOut, &out.DisableSignOut
		*out = new(bool)
		**out = **in
	}
	if in.DisableSignup != nil {
		in, out := &in.DisableSignup, &out.DisableSignup
		*out = new(bool)
		**out = **in
	}
	if in.DiscoveryURL != nil {
		in, out := &in.DiscoveryURL, &out.DiscoveryURL
		*out = new(string)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.DomainAliases != nil {
		in, out := &in.DomainAliases, &out.DomainAliases
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.EnableScriptContext != nil {
		in, out := &in.EnableScriptContext, &out.EnableScriptContext
		*out = new(bool)
		**out = **in
	}
	if in.EnabledDatabaseCustomization != nil {
		in, out := &in.EnabledDatabaseCustomization, &out.EnabledDatabaseCustomization
		*out = new(bool)
		**out = **in
	}
	if in.EntityID != nil {
		in, out := &in.EntityID, &out.EntityID
		*out = new(string)
		**out = **in
	}
	if in.FedMetadataXML != nil {
		in, out := &in.FedMetadataXML, &out.FedMetadataXML
		*out = new(string)
		**out = **in
	}
	if in.FieldsMap != nil {
		in, out := &in.FieldsMap, &out.FieldsMap
		*out = new(string)
		**out = **in
	}
	if in.ForwardRequestInfo != nil {
		in, out := &in.ForwardRequestInfo, &out.ForwardRequestInfo
		*out = new(bool)
		**out = **in
	}
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.GatewayAuthentication != nil {
		in, out := &in.GatewayAuthentication, &out.GatewayAuthentication
		*out = make([]GatewayAuthenticationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GatewayURL != nil {
		in, out := &in.GatewayURL, &out.GatewayURL
		*out = new(string)
		**out = **in
	}
	if in.GlobalTokenRevocationJwtIss != nil {
		in, out := &in.GlobalTokenRevocationJwtIss, &out.GlobalTokenRevocationJwtIss
		*out = new(string)
		**out = **in
	}
	if in.GlobalTokenRevocationJwtSub != nil {
		in, out := &in.GlobalTokenRevocationJwtSub, &out.GlobalTokenRevocationJwtSub
		*out = new(string)
		**out = **in
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
	if in.IdentityAPI != nil {
		in, out := &in.IdentityAPI, &out.IdentityAPI
		*out = new(string)
		**out = **in
	}
	if in.IdpInitiated != nil {
		in, out := &in.IdpInitiated, &out.IdpInitiated
		*out = make([]IdpInitiatedParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ImportMode != nil {
		in, out := &in.ImportMode, &out.ImportMode
		*out = new(bool)
		**out = **in
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.JwksURI != nil {
		in, out := &in.JwksURI, &out.JwksURI
		*out = new(string)
		**out = **in
	}
	if in.KeyID != nil {
		in, out := &in.KeyID, &out.KeyID
		*out = new(string)
		**out = **in
	}
	if in.MapUserIDToID != nil {
		in, out := &in.MapUserIDToID, &out.MapUserIDToID
		*out = new(bool)
		**out = **in
	}
	if in.MaxGroupsToRetrieve != nil {
		in, out := &in.MaxGroupsToRetrieve, &out.MaxGroupsToRetrieve
		*out = new(string)
		**out = **in
	}
	if in.MessagingServiceSid != nil {
		in, out := &in.MessagingServiceSid, &out.MessagingServiceSid
		*out = new(string)
		**out = **in
	}
	if in.MetadataURL != nil {
		in, out := &in.MetadataURL, &out.MetadataURL
		*out = new(string)
		**out = **in
	}
	if in.MetadataXML != nil {
		in, out := &in.MetadataXML, &out.MetadataXML
		*out = new(string)
		**out = **in
	}
	if in.Mfa != nil {
		in, out := &in.Mfa, &out.Mfa
		*out = make([]MfaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NonPersistentAttrs != nil {
		in, out := &in.NonPersistentAttrs, &out.NonPersistentAttrs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PasskeyOptions != nil {
		in, out := &in.PasskeyOptions, &out.PasskeyOptions
		*out = make([]PasskeyOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordComplexityOptions != nil {
		in, out := &in.PasswordComplexityOptions, &out.PasswordComplexityOptions
		*out = make([]PasswordComplexityOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordDictionary != nil {
		in, out := &in.PasswordDictionary, &out.PasswordDictionary
		*out = make([]PasswordDictionaryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordHistory != nil {
		in, out := &in.PasswordHistory, &out.PasswordHistory
		*out = make([]PasswordHistoryParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordNoPersonalInfo != nil {
		in, out := &in.PasswordNoPersonalInfo, &out.PasswordNoPersonalInfo
		*out = make([]PasswordNoPersonalInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PasswordPolicy != nil {
		in, out := &in.PasswordPolicy, &out.PasswordPolicy
		*out = new(string)
		**out = **in
	}
	if in.PingFederateBaseURL != nil {
		in, out := &in.PingFederateBaseURL, &out.PingFederateBaseURL
		*out = new(string)
		**out = **in
	}
	if in.PkceEnabled != nil {
		in, out := &in.PkceEnabled, &out.PkceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Precedence != nil {
		in, out := &in.Precedence, &out.Precedence
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProtocolBinding != nil {
		in, out := &in.ProtocolBinding, &out.ProtocolBinding
		*out = new(string)
		**out = **in
	}
	if in.Provider != nil {
		in, out := &in.Provider, &out.Provider
		*out = new(string)
		**out = **in
	}
	if in.RequestTemplate != nil {
		in, out := &in.RequestTemplate, &out.RequestTemplate
		*out = new(string)
		**out = **in
	}
	if in.RequiresUsername != nil {
		in, out := &in.RequiresUsername, &out.RequiresUsername
		*out = new(bool)
		**out = **in
	}
	if in.Scopes != nil {
		in, out := &in.Scopes, &out.Scopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Scripts != nil {
		in, out := &in.Scripts, &out.Scripts
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SetUserRootAttributes != nil {
		in, out := &in.SetUserRootAttributes, &out.SetUserRootAttributes
		*out = new(string)
		**out = **in
	}
	if in.ShouldTrustEmailVerifiedConnection != nil {
		in, out := &in.ShouldTrustEmailVerifiedConnection, &out.ShouldTrustEmailVerifiedConnection
		*out = new(string)
		**out = **in
	}
	if in.SignInEndpoint != nil {
		in, out := &in.SignInEndpoint, &out.SignInEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SignOutEndpoint != nil {
		in, out := &in.SignOutEndpoint, &out.SignOutEndpoint
		*out = new(string)
		**out = **in
	}
	if in.SignSAMLRequest != nil {
		in, out := &in.SignSAMLRequest, &out.SignSAMLRequest
		*out = new(bool)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningCert != nil {
		in, out := &in.SigningCert, &out.SigningCert
		*out = new(string)
		**out = **in
	}
	if in.SigningKey != nil {
		in, out := &in.SigningKey, &out.SigningKey
		*out = make([]SigningKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StrategyVersion != nil {
		in, out := &in.StrategyVersion, &out.StrategyVersion
		*out = new(float64)
		**out = **in
	}
	if in.Subject != nil {
		in, out := &in.Subject, &out.Subject
		*out = new(string)
		**out = **in
	}
	if in.Syntax != nil {
		in, out := &in.Syntax, &out.Syntax
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
	if in.TenantDomain != nil {
		in, out := &in.TenantDomain, &out.TenantDomain
		*out = new(string)
		**out = **in
	}
	if in.TokenEndpoint != nil {
		in, out := &in.TokenEndpoint, &out.TokenEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Totp != nil {
		in, out := &in.Totp, &out.Totp
		*out = make([]TotpParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TwilioSid != nil {
		in, out := &in.TwilioSid, &out.TwilioSid
		*out = new(string)
		**out = **in
	}
	if in.TwilioTokenSecretRef != nil {
		in, out := &in.TwilioTokenSecretRef, &out.TwilioTokenSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpstreamParams != nil {
		in, out := &in.UpstreamParams, &out.UpstreamParams
		*out = new(string)
		**out = **in
	}
	if in.UseCertAuth != nil {
		in, out := &in.UseCertAuth, &out.UseCertAuth
		*out = new(bool)
		**out = **in
	}
	if in.UseKerberos != nil {
		in, out := &in.UseKerberos, &out.UseKerberos
		*out = new(bool)
		**out = **in
	}
	if in.UseWsfed != nil {
		in, out := &in.UseWsfed, &out.UseWsfed
		*out = new(bool)
		**out = **in
	}
	if in.UserIDAttribute != nil {
		in, out := &in.UserIDAttribute, &out.UserIDAttribute
		*out = new(string)
		**out = **in
	}
	if in.UserinfoEndpoint != nil {
		in, out := &in.UserinfoEndpoint, &out.UserinfoEndpoint
		*out = new(string)
		**out = **in
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]OptionsValidationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WaadCommonEndpoint != nil {
		in, out := &in.WaadCommonEndpoint, &out.WaadCommonEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.WaadProtocol != nil {
		in, out := &in.WaadProtocol, &out.WaadProtocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsValidationInitParameters) DeepCopyInto(out *OptionsValidationInitParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = make([]ValidationUsernameInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsValidationInitParameters.
func (in *OptionsValidationInitParameters) DeepCopy() *OptionsValidationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsValidationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsValidationObservation) DeepCopyInto(out *OptionsValidationObservation) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = make([]ValidationUsernameObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsValidationObservation.
func (in *OptionsValidationObservation) DeepCopy() *OptionsValidationObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsValidationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsValidationParameters) DeepCopyInto(out *OptionsValidationParameters) {
	*out = *in
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = make([]ValidationUsernameParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsValidationParameters.
func (in *OptionsValidationParameters) DeepCopy() *OptionsValidationParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsValidationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasskeyInitParameters) DeepCopyInto(out *PasskeyInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasskeyInitParameters.
func (in *PasskeyInitParameters) DeepCopy() *PasskeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasskeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasskeyObservation) DeepCopyInto(out *PasskeyObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasskeyObservation.
func (in *PasskeyObservation) DeepCopy() *PasskeyObservation {
	if in == nil {
		return nil
	}
	out := new(PasskeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasskeyOptionsInitParameters) DeepCopyInto(out *PasskeyOptionsInitParameters) {
	*out = *in
	if in.ChallengeUI != nil {
		in, out := &in.ChallengeUI, &out.ChallengeUI
		*out = new(string)
		**out = **in
	}
	if in.LocalEnrollmentEnabled != nil {
		in, out := &in.LocalEnrollmentEnabled, &out.LocalEnrollmentEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProgressiveEnrollmentEnabled != nil {
		in, out := &in.ProgressiveEnrollmentEnabled, &out.ProgressiveEnrollmentEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasskeyOptionsInitParameters.
func (in *PasskeyOptionsInitParameters) DeepCopy() *PasskeyOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasskeyOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasskeyOptionsObservation) DeepCopyInto(out *PasskeyOptionsObservation) {
	*out = *in
	if in.ChallengeUI != nil {
		in, out := &in.ChallengeUI, &out.ChallengeUI
		*out = new(string)
		**out = **in
	}
	if in.LocalEnrollmentEnabled != nil {
		in, out := &in.LocalEnrollmentEnabled, &out.LocalEnrollmentEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProgressiveEnrollmentEnabled != nil {
		in, out := &in.ProgressiveEnrollmentEnabled, &out.ProgressiveEnrollmentEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasskeyOptionsObservation.
func (in *PasskeyOptionsObservation) DeepCopy() *PasskeyOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(PasskeyOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasskeyOptionsParameters) DeepCopyInto(out *PasskeyOptionsParameters) {
	*out = *in
	if in.ChallengeUI != nil {
		in, out := &in.ChallengeUI, &out.ChallengeUI
		*out = new(string)
		**out = **in
	}
	if in.LocalEnrollmentEnabled != nil {
		in, out := &in.LocalEnrollmentEnabled, &out.LocalEnrollmentEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProgressiveEnrollmentEnabled != nil {
		in, out := &in.ProgressiveEnrollmentEnabled, &out.ProgressiveEnrollmentEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasskeyOptionsParameters.
func (in *PasskeyOptionsParameters) DeepCopy() *PasskeyOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(PasskeyOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasskeyParameters) DeepCopyInto(out *PasskeyParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasskeyParameters.
func (in *PasskeyParameters) DeepCopy() *PasskeyParameters {
	if in == nil {
		return nil
	}
	out := new(PasskeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordComplexityOptionsInitParameters) DeepCopyInto(out *PasswordComplexityOptionsInitParameters) {
	*out = *in
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordComplexityOptionsInitParameters.
func (in *PasswordComplexityOptionsInitParameters) DeepCopy() *PasswordComplexityOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordComplexityOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordComplexityOptionsObservation) DeepCopyInto(out *PasswordComplexityOptionsObservation) {
	*out = *in
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordComplexityOptionsObservation.
func (in *PasswordComplexityOptionsObservation) DeepCopy() *PasswordComplexityOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordComplexityOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordComplexityOptionsParameters) DeepCopyInto(out *PasswordComplexityOptionsParameters) {
	*out = *in
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordComplexityOptionsParameters.
func (in *PasswordComplexityOptionsParameters) DeepCopy() *PasswordComplexityOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordComplexityOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordDictionaryInitParameters) DeepCopyInto(out *PasswordDictionaryInitParameters) {
	*out = *in
	if in.Dictionary != nil {
		in, out := &in.Dictionary, &out.Dictionary
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordDictionaryInitParameters.
func (in *PasswordDictionaryInitParameters) DeepCopy() *PasswordDictionaryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordDictionaryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordDictionaryObservation) DeepCopyInto(out *PasswordDictionaryObservation) {
	*out = *in
	if in.Dictionary != nil {
		in, out := &in.Dictionary, &out.Dictionary
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordDictionaryObservation.
func (in *PasswordDictionaryObservation) DeepCopy() *PasswordDictionaryObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordDictionaryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordDictionaryParameters) DeepCopyInto(out *PasswordDictionaryParameters) {
	*out = *in
	if in.Dictionary != nil {
		in, out := &in.Dictionary, &out.Dictionary
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordDictionaryParameters.
func (in *PasswordDictionaryParameters) DeepCopy() *PasswordDictionaryParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordDictionaryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordHistoryInitParameters) DeepCopyInto(out *PasswordHistoryInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordHistoryInitParameters.
func (in *PasswordHistoryInitParameters) DeepCopy() *PasswordHistoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordHistoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordHistoryObservation) DeepCopyInto(out *PasswordHistoryObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordHistoryObservation.
func (in *PasswordHistoryObservation) DeepCopy() *PasswordHistoryObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordHistoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordHistoryParameters) DeepCopyInto(out *PasswordHistoryParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordHistoryParameters.
func (in *PasswordHistoryParameters) DeepCopy() *PasswordHistoryParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordHistoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordInitParameters) DeepCopyInto(out *PasswordInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordInitParameters.
func (in *PasswordInitParameters) DeepCopy() *PasswordInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordNoPersonalInfoInitParameters) DeepCopyInto(out *PasswordNoPersonalInfoInitParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordNoPersonalInfoInitParameters.
func (in *PasswordNoPersonalInfoInitParameters) DeepCopy() *PasswordNoPersonalInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordNoPersonalInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordNoPersonalInfoObservation) DeepCopyInto(out *PasswordNoPersonalInfoObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordNoPersonalInfoObservation.
func (in *PasswordNoPersonalInfoObservation) DeepCopy() *PasswordNoPersonalInfoObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordNoPersonalInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordNoPersonalInfoParameters) DeepCopyInto(out *PasswordNoPersonalInfoParameters) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordNoPersonalInfoParameters.
func (in *PasswordNoPersonalInfoParameters) DeepCopy() *PasswordNoPersonalInfoParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordNoPersonalInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordObservation) DeepCopyInto(out *PasswordObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordObservation.
func (in *PasswordObservation) DeepCopy() *PasswordObservation {
	if in == nil {
		return nil
	}
	out := new(PasswordObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PasswordParameters) DeepCopyInto(out *PasswordParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PasswordParameters.
func (in *PasswordParameters) DeepCopy() *PasswordParameters {
	if in == nil {
		return nil
	}
	out := new(PasswordParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberIdentifierInitParameters) DeepCopyInto(out *PhoneNumberIdentifierInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberIdentifierInitParameters.
func (in *PhoneNumberIdentifierInitParameters) DeepCopy() *PhoneNumberIdentifierInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberIdentifierInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberIdentifierObservation) DeepCopyInto(out *PhoneNumberIdentifierObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberIdentifierObservation.
func (in *PhoneNumberIdentifierObservation) DeepCopy() *PhoneNumberIdentifierObservation {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberIdentifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberIdentifierParameters) DeepCopyInto(out *PhoneNumberIdentifierParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberIdentifierParameters.
func (in *PhoneNumberIdentifierParameters) DeepCopy() *PhoneNumberIdentifierParameters {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberIdentifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberInitParameters) DeepCopyInto(out *PhoneNumberInitParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]PhoneNumberIdentifierInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]PhoneNumberSignupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberInitParameters.
func (in *PhoneNumberInitParameters) DeepCopy() *PhoneNumberInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberObservation) DeepCopyInto(out *PhoneNumberObservation) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]PhoneNumberIdentifierObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]PhoneNumberSignupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberObservation.
func (in *PhoneNumberObservation) DeepCopy() *PhoneNumberObservation {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberParameters) DeepCopyInto(out *PhoneNumberParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]PhoneNumberIdentifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]PhoneNumberSignupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberParameters.
func (in *PhoneNumberParameters) DeepCopy() *PhoneNumberParameters {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberSignupInitParameters) DeepCopyInto(out *PhoneNumberSignupInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = make([]SignupVerificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberSignupInitParameters.
func (in *PhoneNumberSignupInitParameters) DeepCopy() *PhoneNumberSignupInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberSignupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberSignupObservation) DeepCopyInto(out *PhoneNumberSignupObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = make([]SignupVerificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberSignupObservation.
func (in *PhoneNumberSignupObservation) DeepCopy() *PhoneNumberSignupObservation {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberSignupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhoneNumberSignupParameters) DeepCopyInto(out *PhoneNumberSignupParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = make([]SignupVerificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhoneNumberSignupParameters.
func (in *PhoneNumberSignupParameters) DeepCopy() *PhoneNumberSignupParameters {
	if in == nil {
		return nil
	}
	out := new(PhoneNumberSignupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SigningKeyInitParameters) DeepCopyInto(out *SigningKeyInitParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SigningKeyInitParameters.
func (in *SigningKeyInitParameters) DeepCopy() *SigningKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SigningKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SigningKeyObservation) DeepCopyInto(out *SigningKeyObservation) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SigningKeyObservation.
func (in *SigningKeyObservation) DeepCopy() *SigningKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SigningKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SigningKeyParameters) DeepCopyInto(out *SigningKeyParameters) {
	*out = *in
	if in.Cert != nil {
		in, out := &in.Cert, &out.Cert
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SigningKeyParameters.
func (in *SigningKeyParameters) DeepCopy() *SigningKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SigningKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignupInitParameters) DeepCopyInto(out *SignupInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = make([]VerificationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignupInitParameters.
func (in *SignupInitParameters) DeepCopy() *SignupInitParameters {
	if in == nil {
		return nil
	}
	out := new(SignupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignupObservation) DeepCopyInto(out *SignupObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = make([]VerificationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignupObservation.
func (in *SignupObservation) DeepCopy() *SignupObservation {
	if in == nil {
		return nil
	}
	out := new(SignupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignupParameters) DeepCopyInto(out *SignupParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = make([]VerificationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignupParameters.
func (in *SignupParameters) DeepCopy() *SignupParameters {
	if in == nil {
		return nil
	}
	out := new(SignupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignupVerificationInitParameters) DeepCopyInto(out *SignupVerificationInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignupVerificationInitParameters.
func (in *SignupVerificationInitParameters) DeepCopy() *SignupVerificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(SignupVerificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignupVerificationObservation) DeepCopyInto(out *SignupVerificationObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignupVerificationObservation.
func (in *SignupVerificationObservation) DeepCopy() *SignupVerificationObservation {
	if in == nil {
		return nil
	}
	out := new(SignupVerificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignupVerificationParameters) DeepCopyInto(out *SignupVerificationParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignupVerificationParameters.
func (in *SignupVerificationParameters) DeepCopy() *SignupVerificationParameters {
	if in == nil {
		return nil
	}
	out := new(SignupVerificationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotpInitParameters) DeepCopyInto(out *TotpInitParameters) {
	*out = *in
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.TimeStep != nil {
		in, out := &in.TimeStep, &out.TimeStep
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotpInitParameters.
func (in *TotpInitParameters) DeepCopy() *TotpInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotpInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotpObservation) DeepCopyInto(out *TotpObservation) {
	*out = *in
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.TimeStep != nil {
		in, out := &in.TimeStep, &out.TimeStep
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotpObservation.
func (in *TotpObservation) DeepCopy() *TotpObservation {
	if in == nil {
		return nil
	}
	out := new(TotpObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotpParameters) DeepCopyInto(out *TotpParameters) {
	*out = *in
	if in.Length != nil {
		in, out := &in.Length, &out.Length
		*out = new(float64)
		**out = **in
	}
	if in.TimeStep != nil {
		in, out := &in.TimeStep, &out.TimeStep
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotpParameters.
func (in *TotpParameters) DeepCopy() *TotpParameters {
	if in == nil {
		return nil
	}
	out := new(TotpParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameIdentifierInitParameters) DeepCopyInto(out *UsernameIdentifierInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameIdentifierInitParameters.
func (in *UsernameIdentifierInitParameters) DeepCopy() *UsernameIdentifierInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsernameIdentifierInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameIdentifierObservation) DeepCopyInto(out *UsernameIdentifierObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameIdentifierObservation.
func (in *UsernameIdentifierObservation) DeepCopy() *UsernameIdentifierObservation {
	if in == nil {
		return nil
	}
	out := new(UsernameIdentifierObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameIdentifierParameters) DeepCopyInto(out *UsernameIdentifierParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameIdentifierParameters.
func (in *UsernameIdentifierParameters) DeepCopy() *UsernameIdentifierParameters {
	if in == nil {
		return nil
	}
	out := new(UsernameIdentifierParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameInitParameters) DeepCopyInto(out *UsernameInitParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]UsernameIdentifierInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]UsernameSignupInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]ValidationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameInitParameters.
func (in *UsernameInitParameters) DeepCopy() *UsernameInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsernameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameObservation) DeepCopyInto(out *UsernameObservation) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]UsernameIdentifierObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]UsernameSignupObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]ValidationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameObservation.
func (in *UsernameObservation) DeepCopy() *UsernameObservation {
	if in == nil {
		return nil
	}
	out := new(UsernameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameParameters) DeepCopyInto(out *UsernameParameters) {
	*out = *in
	if in.Identifier != nil {
		in, out := &in.Identifier, &out.Identifier
		*out = make([]UsernameIdentifierParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ProfileRequired != nil {
		in, out := &in.ProfileRequired, &out.ProfileRequired
		*out = new(bool)
		**out = **in
	}
	if in.Signup != nil {
		in, out := &in.Signup, &out.Signup
		*out = make([]UsernameSignupParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Validation != nil {
		in, out := &in.Validation, &out.Validation
		*out = make([]ValidationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameParameters.
func (in *UsernameParameters) DeepCopy() *UsernameParameters {
	if in == nil {
		return nil
	}
	out := new(UsernameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameSignupInitParameters) DeepCopyInto(out *UsernameSignupInitParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameSignupInitParameters.
func (in *UsernameSignupInitParameters) DeepCopy() *UsernameSignupInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsernameSignupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameSignupObservation) DeepCopyInto(out *UsernameSignupObservation) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameSignupObservation.
func (in *UsernameSignupObservation) DeepCopy() *UsernameSignupObservation {
	if in == nil {
		return nil
	}
	out := new(UsernameSignupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsernameSignupParameters) DeepCopyInto(out *UsernameSignupParameters) {
	*out = *in
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsernameSignupParameters.
func (in *UsernameSignupParameters) DeepCopy() *UsernameSignupParameters {
	if in == nil {
		return nil
	}
	out := new(UsernameSignupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationInitParameters) DeepCopyInto(out *ValidationInitParameters) {
	*out = *in
	if in.AllowedTypes != nil {
		in, out := &in.AllowedTypes, &out.AllowedTypes
		*out = make([]AllowedTypesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxLength != nil {
		in, out := &in.MaxLength, &out.MaxLength
		*out = new(float64)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationInitParameters.
func (in *ValidationInitParameters) DeepCopy() *ValidationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationObservation) DeepCopyInto(out *ValidationObservation) {
	*out = *in
	if in.AllowedTypes != nil {
		in, out := &in.AllowedTypes, &out.AllowedTypes
		*out = make([]AllowedTypesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxLength != nil {
		in, out := &in.MaxLength, &out.MaxLength
		*out = new(float64)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationObservation.
func (in *ValidationObservation) DeepCopy() *ValidationObservation {
	if in == nil {
		return nil
	}
	out := new(ValidationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationParameters) DeepCopyInto(out *ValidationParameters) {
	*out = *in
	if in.AllowedTypes != nil {
		in, out := &in.AllowedTypes, &out.AllowedTypes
		*out = make([]AllowedTypesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxLength != nil {
		in, out := &in.MaxLength, &out.MaxLength
		*out = new(float64)
		**out = **in
	}
	if in.MinLength != nil {
		in, out := &in.MinLength, &out.MinLength
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationParameters.
func (in *ValidationParameters) DeepCopy() *ValidationParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationUsernameInitParameters) DeepCopyInto(out *ValidationUsernameInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationUsernameInitParameters.
func (in *ValidationUsernameInitParameters) DeepCopy() *ValidationUsernameInitParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationUsernameInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationUsernameObservation) DeepCopyInto(out *ValidationUsernameObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationUsernameObservation.
func (in *ValidationUsernameObservation) DeepCopy() *ValidationUsernameObservation {
	if in == nil {
		return nil
	}
	out := new(ValidationUsernameObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ValidationUsernameParameters) DeepCopyInto(out *ValidationUsernameParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ValidationUsernameParameters.
func (in *ValidationUsernameParameters) DeepCopy() *ValidationUsernameParameters {
	if in == nil {
		return nil
	}
	out := new(ValidationUsernameParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VerificationInitParameters) DeepCopyInto(out *VerificationInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerificationInitParameters.
func (in *VerificationInitParameters) DeepCopy() *VerificationInitParameters {
	if in == nil {
		return nil
	}
	out := new(VerificationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VerificationObservation) DeepCopyInto(out *VerificationObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerificationObservation.
func (in *VerificationObservation) DeepCopy() *VerificationObservation {
	if in == nil {
		return nil
	}
	out := new(VerificationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VerificationParameters) DeepCopyInto(out *VerificationParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerificationParameters.
func (in *VerificationParameters) DeepCopy() *VerificationParameters {
	if in == nil {
		return nil
	}
	out := new(VerificationParameters)
	in.DeepCopyInto(out)
	return out
}
