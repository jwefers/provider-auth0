// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PromptInitParameters struct {

	// (Boolean) Indicates whether the identifier first is used when using the new Universal Login experience.
	// Indicates whether the identifier first is used when using the new Universal Login experience.
	IdentifierFirst *bool `json:"identifierFirst,omitempty" tf:"identifier_first,omitempty"`

	// (String) Which login experience to use. Options include classic and new.
	// Which login experience to use. Options include `classic` and `new`.
	UniversalLoginExperience *string `json:"universalLoginExperience,omitempty" tf:"universal_login_experience,omitempty"`

	// (Boolean) Determines if the login screen uses identifier and biometrics first. Setting this property to true, requires MFA factors enabled for enrollment; use the auth0_guardian resource to set one up.
	// Determines if the login screen uses identifier and biometrics first. Setting this property to `true`, requires MFA factors enabled for enrollment; use the `auth0_guardian` resource to set one up.
	WebauthnPlatformFirstFactor *bool `json:"webauthnPlatformFirstFactor,omitempty" tf:"webauthn_platform_first_factor,omitempty"`
}

type PromptObservation struct {

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Indicates whether the identifier first is used when using the new Universal Login experience.
	// Indicates whether the identifier first is used when using the new Universal Login experience.
	IdentifierFirst *bool `json:"identifierFirst,omitempty" tf:"identifier_first,omitempty"`

	// (String) Which login experience to use. Options include classic and new.
	// Which login experience to use. Options include `classic` and `new`.
	UniversalLoginExperience *string `json:"universalLoginExperience,omitempty" tf:"universal_login_experience,omitempty"`

	// (Boolean) Determines if the login screen uses identifier and biometrics first. Setting this property to true, requires MFA factors enabled for enrollment; use the auth0_guardian resource to set one up.
	// Determines if the login screen uses identifier and biometrics first. Setting this property to `true`, requires MFA factors enabled for enrollment; use the `auth0_guardian` resource to set one up.
	WebauthnPlatformFirstFactor *bool `json:"webauthnPlatformFirstFactor,omitempty" tf:"webauthn_platform_first_factor,omitempty"`
}

type PromptParameters struct {

	// (Boolean) Indicates whether the identifier first is used when using the new Universal Login experience.
	// Indicates whether the identifier first is used when using the new Universal Login experience.
	// +kubebuilder:validation:Optional
	IdentifierFirst *bool `json:"identifierFirst,omitempty" tf:"identifier_first,omitempty"`

	// (String) Which login experience to use. Options include classic and new.
	// Which login experience to use. Options include `classic` and `new`.
	// +kubebuilder:validation:Optional
	UniversalLoginExperience *string `json:"universalLoginExperience,omitempty" tf:"universal_login_experience,omitempty"`

	// (Boolean) Determines if the login screen uses identifier and biometrics first. Setting this property to true, requires MFA factors enabled for enrollment; use the auth0_guardian resource to set one up.
	// Determines if the login screen uses identifier and biometrics first. Setting this property to `true`, requires MFA factors enabled for enrollment; use the `auth0_guardian` resource to set one up.
	// +kubebuilder:validation:Optional
	WebauthnPlatformFirstFactor *bool `json:"webauthnPlatformFirstFactor,omitempty" tf:"webauthn_platform_first_factor,omitempty"`
}

// PromptSpec defines the desired state of Prompt
type PromptSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PromptParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PromptInitParameters `json:"initProvider,omitempty"`
}

// PromptStatus defines the observed state of Prompt.
type PromptStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PromptObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Prompt is the Schema for the Prompts API. With this resource, you can manage your Auth0 prompts, including choosing the login experience version.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,auth0}
type Prompt struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PromptSpec   `json:"spec"`
	Status            PromptStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PromptList contains a list of Prompts
type PromptList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Prompt `json:"items"`
}

// Repository type metadata.
var (
	Prompt_Kind             = "Prompt"
	Prompt_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Prompt_Kind}.String()
	Prompt_KindAPIVersion   = Prompt_Kind + "." + CRDGroupVersion.String()
	Prompt_GroupVersionKind = CRDGroupVersion.WithKind(Prompt_Kind)
)

func init() {
	SchemeBuilder.Register(&Prompt{}, &PromptList{})
}
